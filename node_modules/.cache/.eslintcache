[{"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/index.js":"1","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/App.js":"2","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/pointLeaders.jsx":"3","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/mainCards/scoreBoard.jsx":"4","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/listenWatch.jsx":"5","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/lastPlayDetail.jsx":"6","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/teamStatsDetail.jsx":"7","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/boxScoreGraph.jsx":"8","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/tickets.jsx":"9","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/resources/loadingScreen.jsx":"10","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/ScoreAPI.js":"11","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/PointLeadersDataAPI.js":"12","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/LastPlayAPI.js":"13","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/boxScoreDetail.jsx":"14","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/TeamDataAPI.js":"15"},{"size":810,"mtime":1648937767940,"results":"16","hashOfConfig":"17"},{"size":5537,"mtime":1651602581832,"results":"18","hashOfConfig":"17"},{"size":3236,"mtime":1651428955790,"results":"19","hashOfConfig":"17"},{"size":788,"mtime":1649704171970,"results":"20","hashOfConfig":"17"},{"size":864,"mtime":1649991282694,"results":"21","hashOfConfig":"17"},{"size":1585,"mtime":1651426237977,"results":"22","hashOfConfig":"17"},{"size":3414,"mtime":1651603857513,"results":"23","hashOfConfig":"17"},{"size":11812,"mtime":1651428465452,"results":"24","hashOfConfig":"17"},{"size":1912,"mtime":1650235344608,"results":"25","hashOfConfig":"17"},{"size":368,"mtime":1649299868439,"results":"26","hashOfConfig":"17"},{"size":565,"mtime":1649703897047,"results":"27","hashOfConfig":"17"},{"size":3146,"mtime":1651429530546,"results":"28","hashOfConfig":"17"},{"size":1258,"mtime":1651422667876,"results":"29","hashOfConfig":"17"},{"size":4809,"mtime":1650954544492,"results":"30","hashOfConfig":"17"},{"size":143,"mtime":1651602428107,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1dipieq",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/index.js",[],[],["82","83"],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/App.js",[],[],["84","85"],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/pointLeaders.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/mainCards/scoreBoard.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/listenWatch.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/lastPlayDetail.jsx",["86"],[],"import React, {useEffect} from 'react';\n\nconst LastPlayDetail = (data) => {\n    const instance = data.props;\n\n    const Canvas = () => {\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n\n        const xCoordinate = instance.locX / 2;\n        const yCoordinate = instance.locY / 2;\n\n        ctx.beginPath();\n\n        ctx.fillStyle = \"#CF5300\";\n\n        // Set canvas [0,0] to center\n        ctx.translate(canvas.width/2,canvas.height/2);\n\n        // Draw \n        ctx.arc(xCoordinate,yCoordinate,5,0,Math.PI*2);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.save();\n    }\n\n    useEffect(()=>{\n        const canvas = Canvas();\n        return canvas;\n    }, [])\n\n    return (\n        <div className=\"last-play\">\n\n            {/* To Do: make this section auto scroll on its own vertically. */}\n            <div className=\"last-play-header\">\n                <div className=\"scrollbox\">\n                    <img src={instance.playerImg } alt=\"player\" />\n                    <h5>Last Play @ { instance.clock } | { instance.description }</h5>\n                </div>\n            </div>\n\n            <div className=\"last-play-canvas\">\n                <canvas id=\"canvas\" className=\"canvas\"></canvas>\n            </div>\n        </div>\n    )\n}\n\nexport default LastPlayDetail;\n\n\n// Component goal, render 'last play' data out onto court based on coordinate provided\n// Future goal, render all game event coordinates once a game has completed. \n// Future goal, render all game events with hover over effect with popup of description\n","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/teamStatsDetail.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/boxScoreGraph.jsx",["87"],[],"import React, { useEffect, useState } from 'react';\nimport ReactSvgPieChart from \"react-svg-piechart\";\nimport LoadingScreen from '../resources/loadingScreen';\n\nconst BoxScoreGraph = (state) => {\n    const instance = state.props;\n    \n    const [ loaded, setLoaded ] = useState(false);\n\n    const [ pipHls, setPipHls ] = useState(null);\n    const [ pipVls, setPipVls ] = useState(null);\n    const [ fgpHls, setFgpHls ] = useState(null);\n    const [ fgpVls, setFgpVls ] = useState(null);\n    const [ tppHls, setTppHls ] = useState(null);\n    const [ tppVls, setTppVls ] = useState(null);\n    const [ ftpHls, setFtpHls ] = useState(null);\n    const [ ftpVls, setFtpVls ] = useState(null);\n    const [ orebHls, setOrebHls ] = useState(null);\n    const [ orebVls, setOrebVls ] = useState(null);\n    const [ drebHls, setDrebHls ] = useState(null);\n    const [ drebVls, setDrebVls ] = useState(null);\n    const [ tovHls, setTovHls ] = useState(null);\n    const [ tovVls, setTovVls ] = useState(null);\n    const [ potovHls, setPotovHls ] = useState(null);\n    const [ potovVls, setPotovVls ] = useState(null);\n\n    // PTS IN PAINT\n    const allPip = instance.vls.tstsg.pip + instance.hls.tstsg.pip;\n    const pipH = Math.round((instance.hls.tstsg.pip / allPip) * 100);\n    const pipV = Math.round((instance.vls.tstsg.pip / allPip) * 100);\n\n    const pipData = [\n        {title: \"PIP \" + instance.hls.ta, value: pipHls, color: \"#dd2b35\"},\n        {title: \"PIP \" + instance.vls.ta, value: pipVls, color: \"#663694\"},\n    ]\n\n    // FIELD GOALS\n    const fgpV = Math.round((instance.vls.tstsg.fgm / instance.vls.tstsg.fga) * 100);\n    const fgpH = Math.round((instance.hls.tstsg.fgm / instance.hls.tstsg.fga) * 100);\n\n    const fgpData = [\n        {title: \"FG% \" + instance.vls.ta, value: fgpHls, color: \"#dd2b35\"},\n        {title: \"FG% \" + instance.vls.ta, value: fgpVls, color: \"#663694\"},\n    ]\n\n    // THREE POINTERS\n    const tppH = Math.round((instance.hls.tstsg.tpm / instance.hls.tstsg.tpa) * 100);\n    const tppV = Math.round((instance.vls.tstsg.tpm / instance.hls.tstsg.tpa) * 100);\n\n    const tppData = [\n        {title: \"TP% \" + instance.hls.ta, value: tppHls, color: \"#dd2b35\"},\n        {title: \"TP% \" + instance.vls.ta, value: tppVls, color: \"#663694\"},\n    ]\n\n    // FREE THROWS\n    const ftpH = Math.round((instance.hls.tstsg.ftm / instance.hls.tstsg.fta) * 100);\n    const ftpV = Math.round((instance.vls.tstsg.ftm / instance.vls.tstsg.fta) * 100);\n\n    const ftpData = [\n        {title: \"FT% \" + instance.hls.ta, value: ftpHls, color: \"#dd2b35\"},\n        {title: \"FT% \" + instance.vls.ta, value: ftpVls, color: \"#663694\"},\n    ]\n\n    // OFFENSIVE REBOUNDS\n    const oRebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n    const orebH = Math.round((instance.hls.tstsg.oreb / oRebOne) * 100);\n\n    const oRebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n    const orebV = Math.round((instance.vls.tstsg.oreb / oRebTwo) * 100);\n\n    const orebData = [\n        {title: \"OREB \" + instance.hls.ta, value: orebHls, color: \"#dd2b35\"},\n        {title: \"OREB \" + instance.vls.ta, value: orebVls, color: \"#663694\"},\n    ]\n\n    // DEFENSIVE REBOUNDS \n    const drebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n    const drebH = Math.round((instance.hls.tstsg.oreb / drebOne) * 100);\n\n    const drebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n    const drebV = Math.round((instance.vls.tstsg.oreb / drebTwo) * 100);\n\n    const drebData = [\n        {title: \"DREB \" + instance.hls.ta, value: drebHls, color: \"#dd2b35\"},\n        {title: \"DREB \" + instance.vls.ta, value: drebVls, color: \"#663694\"},\n    ]\n\n    // TURNOVERS \n    if(!instance.hls.tstsg.tov) {\n        setTovHls(50);\n    }\n    if(!instance.vls.tstsg.tov) {\n        setTovVls(50);\n    }\n    \n    const allTurnovers = instance.hls.tstsg.tov + instance.hls.tstsg.tov;\n    const tovH = Math.round((instance.hls.tstsg.tov / allTurnovers) * 100);\n    const tovV = Math.round((instance.vls.tstsg.tov / allTurnovers) * 100);\n    \n    const tovData = [\n        {title: \"TOV \" + instance.hls.ta, value: tovHls, color: \"#dd2b35\"},\n        {title: \"TOV \" + instance.vls.ta, value: tovVls, color: \"#663694\"},\n    ]\n\n    // POINTS OFF TURNOVERS\n    const allTOPoints = instance.hls.tstsg.potov + instance.vls.tstsg.potov;\n    const potovH = Math.round((instance.hls.tstsg.potov / allTOPoints) * 100);\n    const potovV = Math.round((instance.vls.tstsg.potov / allTOPoints) * 100);\n\n    const potovData = [\n        {title: \"POTOV \" + instance.hls.ta, value: potovHls, color: \"#dd2b35\"},\n        {title: \"POTOV \" + instance.vls.ta, value: potovVls, color: \"#663694\"},\n    ]\n\n    useEffect(()=>{\n        setPipHls(pipH);\n        setPipVls(pipV);\n        setFgpHls(fgpH);\n        setFgpVls(fgpV);\n        setTppHls(tppH);\n        setTppVls(tppV);\n        setFtpHls(ftpH);\n        setFtpVls(ftpV);\n        setOrebHls(orebH);\n        setOrebVls(orebV);\n        setDrebHls(drebH);\n        setDrebVls(drebV);\n        setTovHls(tovH);\n        setTovVls(tovV);\n        setPotovHls(potovH);\n        setPotovVls(potovV);\n\n        setLoaded(true);\n    }, []);\n\n    if(!loaded) {\n        return (\n            <div className=\"graph\">\n                <LoadingScreen />\n            </div>\n        )\n    } else if ( loaded ) {\n        return (\n            <div className=\"graph\">\n\n                <div className=\"graph-card\">\n                    <h1>Pts in the Paint</h1>\n                    <ReactSvgPieChart\n                        data={pipData}\n                        \n                        // Expand on hover (or touch) effect\n                        expandOnHover\n\n                        // custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Feild Goals</h1>\n                    <ReactSvgPieChart\n                        data={fgpData}\n                        // Expand on hover (or touch) effect\n                        expandOnHover\n\n                        // custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Three Points</h1>\n                    <ReactSvgPieChart\n                        data={tppData}\n                        // Expand on hover (or touch) effect\n                        expandOnHover\n\n                        // custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Free Throws</h1>\n                    <ReactSvgPieChart\n                        data={ftpData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n                \n                <div className=\"graph-card\">\n                    <h1>Off-Rebounds</h1>\n                    <ReactSvgPieChart\n                        data={orebData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Def-Rebounds</h1>\n                    <ReactSvgPieChart\n                        data={drebData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Turnovers</h1>\n                    <ReactSvgPieChart\n                        data={tovData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Pts off Turnovers</h1>\n                    <ReactSvgPieChart\n                        data={potovData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <LoadingScreen />\n        )\n    }\n    \n}\n\nexport default BoxScoreGraph;\n","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/tickets.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/resources/loadingScreen.jsx",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/ScoreAPI.js",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/PointLeadersDataAPI.js",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/LastPlayAPI.js",[],[],"/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/components/tabs/boxScoreDetail.jsx",["88"],[],"import React, { useState, useEffect } from 'react';\nimport Loading from '../resources/loadingScreen.jsx';\n\nconst BoxScore = (data) => {\n    const instance = data.props;\n    \n    const [ loaded, setLoaded ] = useState(true);\n    const [ fgpVls, setFgpVls ] = useState(null);\n    const [ fgpHls, setFgpHls ] = useState(null);\n    const [ tppVls, setTppVls ] = useState(null);\n    const [ tppHls, setTppHls ] = useState(null);\n    const [ ftpVls, setFtpVls ] = useState(null);\n    const [ ftpHls, setFtpHls ] = useState(null);\n\n\n    const setData = (state) => {\n        setFgpVls(Math.round((instance.vls.tstsg.fgm / instance.vls.tstsg.fga) * 100) + '%');\n        setFgpHls(Math.round((instance.hls.tstsg.fgm / instance.hls.tstsg.fga) * 100) + '%');\n        setTppVls(Math.round((instance.vls.tstsg.tpm / instance.vls.tstsg.tpa) * 100) + '%');\n        setTppHls(Math.round((instance.hls.tstsg.tpm / instance.hls.tstsg.tpa) * 100) + '%');\n        setFtpVls(Math.round((instance.vls.tstsg.ftm / instance.vls.tstsg.fta) * 100) + '%');\n        setFtpHls(Math.round((instance.hls.tstsg.ftm / instance.hls.tstsg.fta) * 100) + '%');\n        setLoaded(true);\n    }\n\n    useEffect(()=>{\n        setData(instance);\n    }, [])\n\n    if (!loaded) {\n        return (\n            <Loading />\n        )\n    } else {\n        return (\n            <div className=\"box-score\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Team</th>\n                            <th>Q1 Pts</th>\n                            <th>Q2 Pts</th>\n                            <th>Q3 Pts</th>\n                            <th>Q4 Pts</th>\n                            <th>OT Pts</th>\n                            <th>FT Out</th>\n                            <th>ST Out</th>\n                            <th>FG%</th>\n                            <th>TP%</th>\n                            <th>FT%</th>\n                            <th>OREB</th>\n                            <th>DREB</th>\n                            <th>STL</th>\n                            <th>BLK</th>\n                            <th>FL</th>\n                            <th>TOV</th>\n                            <th>PIP</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* Away */}\n                        <tr>\n                            <td className={instance.vls.ta}>{instance.vls.ta}</td>\n                            <td>{instance.vls.q1}</td>\n                            <td>{instance.vls.q2}</td>\n                            <td>{instance.vls.q3}</td>\n                            <td>{instance.vls.q4}</td>\n                            <td>{instance.vls.ot ? instance.vls.ot : 'N/A'}</td>\n                            <td>{instance.vls.ftout}</td>\n                            <td>{instance.vls.stout}</td>\n                            <td>{ fgpVls }</td>\n                            <td>{ tppVls }</td>\n                            <td>{ ftpVls }</td>\n                            <td>{instance.vls.tstsg.oreb}</td>\n                            <td>{instance.vls.tstsg.dreb}</td>\n                            <td>{instance.vls.tstsg.stl}</td>\n                            <td>{instance.vls.tstsg.blk}</td>\n                            <td>{instance.vls.tstsg.pf}</td>\n                            <td>{instance.vls.tstsg.tov}</td>\n                            <td>{instance.vls.tstsg.pip ? instance.vls.tstsg.pip : 0}</td>\n                        </tr>\n                        {/* Home */}\n                        <tr>\n                            <td className={instance.hls.ta}>{instance.hls.ta}</td>\n                            <td>{instance.hls.q1}</td>\n                            <td>{instance.hls.q2}</td>\n                            <td>{instance.hls.q3}</td>\n                            <td>{instance.hls.q4}</td>\n                            <td>{instance.hls.ot ? instance.hls.ot : 'N/A'}</td>\n                            <td>{instance.hls.ftout}</td>\n                            <td>{instance.hls.stout}</td>\n                            <td>{ fgpHls }</td>\n                            <td>{ tppHls }</td>\n                            <td>{ ftpHls }</td>\n                            <td>{instance.hls.tstsg.oreb}</td>\n                            <td>{instance.hls.tstsg.dreb}</td>\n                            <td>{instance.hls.tstsg.stl}</td>\n                            <td>{instance.hls.tstsg.blk}</td>\n                            <td>{instance.hls.tstsg.pf}</td>\n                            <td>{instance.hls.tstsg.tov}</td>\n                            <td>{instance.hls.tstsg.pip ? instance.hls.tstsg.pip : 0}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default BoxScore;\n","/Users/benniewalker/Desktop/2022_DEPLOYED/HoustonRockets/HoustonRockets/client/src/reducers/TeamDataAPI.js",[],[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":31,"column":8,"nodeType":"97","endLine":31,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":134,"column":8,"nodeType":"97","endLine":134,"endColumn":10,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":28,"column":8,"nodeType":"97","endLine":28,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Canvas'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has missing dependencies: 'drebH', 'drebV', 'fgpH', 'fgpV', 'ftpH', 'ftpV', 'orebH', 'orebV', 'pipH', 'pipV', 'potovH', 'potovV', 'tovH', 'tovV', 'tppH', and 'tppV'. Either include them or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'instance' and 'setData'. Either include them or remove the dependency array.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [Canvas]",{"range":"114","text":"115"},"Update the dependencies array to be: [drebH, drebV, fgpH, fgpV, ftpH, ftpV, orebH, orebV, pipH, pipV, potovH, potovV, tovH, tovV, tppH, tppV]",{"range":"116","text":"117"},"Update the dependencies array to be: [instance, setData]",{"range":"118","text":"119"},[721,723],"[Canvas]",[5125,5127],"[drebH, drebV, fgpH, fgpV, ftpH, ftpV, orebH, orebV, pipH, pipV, potovH, potovV, tovH, tovV, tppH, tppV]",[1209,1211],"[instance, setData]"]