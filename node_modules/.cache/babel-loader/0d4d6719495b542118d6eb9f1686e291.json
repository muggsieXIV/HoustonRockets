{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(result => {\n      setData(result);\n      setLoaded(true);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } else if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"+xnI8R/7Z4ZMr0oCUQTMcuXmbnA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js"],"names":["React","useState","useEffect","App","error","setError","data","setData","loaded","setLoaded","fetch","then","res","json","result","message","map","item","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAECF,IAFD,CAGGG,MAAD,IAAY;AACVP,MAAAA,OAAO,CAACO,MAAD,CAAP;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KANH,EAOE;AACA;AACA;AACCL,IAAAA,KAAD,IAAW;AACTK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACP,MAAL,EAAa;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGF,IAAI,CAACU,GAAL,CAASC,IAAI,iBACZ;AAAA,kBACGA;AADH,SAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GAtCQf,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\n\nfunction App() {\n  const [ error, setError ] = useState(null);\n  const [ data, setData ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( \n      (result) => {\n        setData(result);\n        setLoaded(true);\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        setLoaded(true);\n        setError(error);\n      }\n    );\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!loaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {data.map(item => (\n          <li key={item.id}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}