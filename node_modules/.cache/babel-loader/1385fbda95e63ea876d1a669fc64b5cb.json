{"ast":null,"code":"// Not Live Yet \n// This will replace LeadersApi\n// Purpose will be to obtain team logo will also doing everything the LeadersApi does. \n// Doing this here for the purpose of upgrading without disrupting a stable project. \n// Goal is to seemlessly replace \nexport default function GetPointLeadersData(data) {\n  let hls = data.hls;\n  let vls = data.vls;\n\n  function filterHls(hlsData) {\n    let team = hlsData.ta;\n    let evalHls = hlsData.pstsg;\n    let sortedHls = evalHls.sort((a, b) => {\n      if (a.pts < b.pts) {\n        return -1;\n      } else if (a.pts > b.pts) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    let newHls = sortedHls(evalHls).reverse;\n    let data = [{\n      name: newHls[0].fn[0] + '.' + newHls[0].ln,\n      pts: newHls[0].pts,\n      ast: newHls[0].ast,\n      pid: newHls[0].pid,\n      ta: team\n    }, {\n      name: newHls[1].fn[1] + '.' + newHls[1].ln,\n      pts: newHls[1].pts,\n      ast: newHls[1].ast,\n      pid: newHls[1].pid,\n      ta: team\n    }, {\n      name: newHls[2].fn[2] + '.' + newHls[2].ln,\n      pts: newHls[2].pts,\n      ast: newHls[2].ast,\n      pid: newHls[2].pid,\n      ta: team\n    }];\n    return data;\n  }\n\n  function filterVls(vlsData) {\n    let team = vlsData.ta;\n    let evalVls = vlsData.pstsg;\n    let sortedVls = evalVls.sort((a, b) => {\n      if (a.pts < b.pts) {\n        return -1;\n      } else if (a.pts > b.pts) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    let newVls = sortedVls(evalVls).reverse();\n    let data = [{\n      name: newVls[0].fn[0] + '.' + newVls[0].ln,\n      pts: newVls[0].pts,\n      ast: newVls[0].ast,\n      pid: newVls[0].pid,\n      ta: team\n    }, {\n      name: newVls[1].fn[1] + '.' + newVls[1].ln,\n      pts: newVls[1].pts,\n      ast: newVls[1].ast,\n      pid: newVls[1].pid,\n      ta: team\n    }, {\n      name: newVls[2].fn[2] + '.' + newVls[2].ln,\n      pts: newVls[2].pts,\n      ast: newVls[2].ast,\n      pid: newVls[2].pid,\n      ta: team\n    }];\n    return data;\n  }\n\n  const hlsLdrs = filterHls(hls);\n  const vlsLdrs = filterVls(vls);\n  const query = hlsLdrs.append(vlsLdrs);\n  let sortedQuery = query.sort((a, b) => {\n    if (a.pts < b.pts) {\n      return -1;\n    } else if (a.pts > b.pts) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n  let newQuery = sortedQuery.reverse();\n  const leaders = newQuery.slice(0, 3);\n  let first = {\n    'name': leaders[0].fn[0] + '.' + leaders[0].ln,\n    'pts': leaders[0].pts,\n    'ast': leaders[0].ast,\n    'pid': leaders[0].pid,\n    'ta': leaders[0].ta\n  };\n  let second = {\n    'name': leaders[1].fn[0] + '.' + leaders[1].ln,\n    'pts': leaders[1].pts,\n    'ast': leaders[1].ast,\n    'pid': leaders[1].pid,\n    'ta': leaders[0].ta\n  };\n  let third = {\n    'name': leaders[2].fn[0] + '.' + leaders[2].ln,\n    'pts': leaders[2].pts,\n    'ast': leaders[2].ast,\n    'pid': leaders[2].pid,\n    'ta': leaders[0].ta\n  };\n  let currentLeaders = {\n    'first': first,\n    'second': second,\n    'third': third\n  };\n  console.log('Current Leaders Loaded: ' + currentLeaders);\n  return currentLeaders;\n}\n_c = GetPointLeadersData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPointLeadersData\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/reducers/PointLeadersDataAPI.js"],"names":["GetPointLeadersData","data","hls","vls","filterHls","hlsData","team","ta","evalHls","pstsg","sortedHls","sort","a","b","pts","newHls","reverse","name","fn","ln","ast","pid","filterVls","vlsData","evalVls","sortedVls","newVls","hlsLdrs","vlsLdrs","query","append","sortedQuery","newQuery","leaders","slice","first","second","third","currentLeaders","console","log"],"mappings":"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","sourcesContent":["\n// Not Live Yet \n// This will replace LeadersApi\n// Purpose will be to obtain team logo will also doing everything the LeadersApi does. \n// Doing this here for the purpose of upgrading without disrupting a stable project. \n// Goal is to seemlessly replace \n\n\nexport default function GetPointLeadersData(data) {\n\n    let hls = data.hls; \n    let vls = data.vls;\n\n\n    function filterHls(hlsData) {\n        let team = hlsData.ta;\n        let evalHls = hlsData.pstsg;\n        let sortedHls = evalHls.sort((a, b) => {\n            if(a.pts < b.pts) {\n                return -1\n            } else if(a.pts > b.pts) {\n                return 1\n            } else {\n                return 0\n            }\n        });\n\n        let newHls = sortedHls(evalHls).reverse;\n\n        let data = [\n            {\n                name: newHls[0].fn[0] + '.' + newHls[0].ln,\n                pts: newHls[0].pts,\n                ast: newHls[0].ast,\n                pid: newHls[0].pid,\n                ta: team\n            }, {\n                name: newHls[1].fn[1] + '.' + newHls[1].ln,\n                pts: newHls[1].pts,\n                ast: newHls[1].ast,\n                pid: newHls[1].pid,\n                ta: team\n            }, {\n                name: newHls[2].fn[2] + '.' + newHls[2].ln,\n                pts: newHls[2].pts,\n                ast: newHls[2].ast,\n                pid: newHls[2].pid,\n                ta: team\n            }\n            \n        ]\n\n        return data;\n    }\n\n    function filterVls(vlsData) {\n        let team = vlsData.ta;\n        let evalVls = vlsData.pstsg;\n        let sortedVls = evalVls.sort((a, b) => {\n            if(a.pts < b.pts) {\n                return -1\n            } else if(a.pts > b.pts) {\n                return 1\n            } else {\n                return 0\n            }\n        });\n        let newVls = sortedVls(evalVls).reverse();\n        let data = [\n            {\n                name: newVls[0].fn[0] + '.' + newVls[0].ln,\n                pts: newVls[0].pts,\n                ast: newVls[0].ast,\n                pid: newVls[0].pid,\n                ta: team\n            }, {\n                name: newVls[1].fn[1] + '.' + newVls[1].ln,\n                pts: newVls[1].pts,\n                ast: newVls[1].ast,\n                pid: newVls[1].pid,\n                ta: team\n            }, {\n                name: newVls[2].fn[2] + '.' + newVls[2].ln,\n                pts: newVls[2].pts,\n                ast: newVls[2].ast,\n                pid: newVls[2].pid,\n                ta: team\n            }\n        ]\n        return data;\n    }\n\n    const hlsLdrs = filterHls(hls);\n    const vlsLdrs = filterVls(vls);\n    const query = hlsLdrs.append(vlsLdrs);\n    let sortedQuery = query.sort((a, b) => {\n        if(a.pts < b.pts) {\n            return -1\n        } else if(a.pts > b.pts) {\n            return 1\n        } else {\n            return 0\n        }\n    });\n\n    let newQuery = sortedQuery.reverse();\n    const leaders = newQuery.slice(0, 3);\n\n    let first = {\n        'name': leaders[0].fn[0] + '.' + leaders[0].ln,\n        'pts': leaders[0].pts,\n        'ast': leaders[0].ast,\n        'pid': leaders[0].pid,\n        'ta': leaders[0].ta\n    };\n\n    let second = {\n        'name': leaders[1].fn[0] + '.' + leaders[1].ln,\n        'pts': leaders[1].pts,\n        'ast': leaders[1].ast,\n        'pid': leaders[1].pid,\n        'ta': leaders[0].ta\n    };\n\n    let third = {\n        'name': leaders[2].fn[0] + '.' + leaders[2].ln,\n        'pts': leaders[2].pts,\n        'ast': leaders[2].ast,\n        'pid': leaders[2].pid,\n        'ta': leaders[0].ta\n    };\n    \n    let currentLeaders = {\n        'first': first, \n        'second': second, \n        'third': third,\n    };\n\n    console.log('Current Leaders Loaded: ' + currentLeaders);\n    return currentLeaders;\n}\n"]},"metadata":{},"sourceType":"module"}