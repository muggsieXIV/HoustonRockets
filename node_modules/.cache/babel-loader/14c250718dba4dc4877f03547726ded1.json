{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/lastPlayDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LastPlayDetail = data => {\n  _s();\n\n  const instance = data.props;\n  console.log('last play');\n  console.log(data.props);\n\n  const Canvas = () => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext(\"2d\"); // const xCoordinate = 233;\n    // const yCoordinate = 65;\n\n    const xCoordinate = instance.locX / 2;\n    const yCoordinate = instance.locY / 2;\n    ctx.beginPath();\n    ctx.fillStyle = \"blue\";\n    const base_image = Image();\n    base_image.src = '../../media/images/rocketsLogo.png';\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.arc(xCoordinate, yCoordinate, 5, 0, Math.PI * 2);\n    ctx.drawImage(base_image, xCoordinate, yCoordinate, 10, 10);\n    ctx.closePath();\n    ctx.fill();\n    ctx.save();\n  };\n\n  useEffect(() => {\n    Canvas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"last-play\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-play-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: instance.playerImg,\n          alt: \"player image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this), \" Last Play @ \", instance.clock, \" \", instance.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-play-canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LastPlayDetail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LastPlayDetail;\nexport default LastPlayDetail; // Component goal, render 'last play' data out onto court based on coordinate provided\n// Future goal, render all game event coordinates once a game has completed. \n// Future goal, render all game events with hover over effect with popup of description\n// This component is not working correctly. I am struggling to understand how these coordinates\n// pertain to the coordinates of a court. I have shifted [0,0] to center court. However without\n// what the bounds of the coordinates arem I am unsure on how to correctly render them out accurately. \n// I currently have it set to diving all coordinates by two because I have not seen a query with a \n// coordinate beyond an integer of 200, but have seen them in the high 100s. I did some rendering with \n// coordinates that were based on the court size however There were a number of coordinates that were \n// returned that did not match the message that was returned with it so I gave up. I'd love to talk to \n// you about how your coordinates work so that I can make this component work correctly regardless of \n// whether or not hired. \n\nvar _c;\n\n$RefreshReg$(_c, \"LastPlayDetail\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/lastPlayDetail.jsx"],"names":["React","useEffect","LastPlayDetail","data","instance","props","console","log","Canvas","canvas","document","getElementById","ctx","getContext","xCoordinate","locX","yCoordinate","locY","beginPath","fillStyle","base_image","Image","src","translate","width","height","arc","Math","PI","drawImage","closePath","fill","save","playerImg","clock","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAAA;;AAC7B,QAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,KAAjB;;AAGA,QAAMG,MAAM,GAAG,MAAM;AACjB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ,CAFiB,CAGjB;AACA;;AACA,UAAMC,WAAW,GAAGV,QAAQ,CAACW,IAAT,GAAgB,CAApC;AACA,UAAMC,WAAW,GAAGZ,QAAQ,CAACa,IAAT,GAAgB,CAApC;AAEAL,IAAAA,GAAG,CAACM,SAAJ;AAEAN,IAAAA,GAAG,CAACO,SAAJ,GAAgB,MAAhB;AACA,UAAMC,UAAU,GAAGC,KAAK,EAAxB;AACAD,IAAAA,UAAU,CAACE,GAAX,GAAiB,oCAAjB;AAEAV,IAAAA,GAAG,CAACW,SAAJ,CAAcd,MAAM,CAACe,KAAP,GAAa,CAA3B,EAA6Bf,MAAM,CAACgB,MAAP,GAAc,CAA3C;AAEAb,IAAAA,GAAG,CAACc,GAAJ,CAAQZ,WAAR,EAAoBE,WAApB,EAAgC,CAAhC,EAAkC,CAAlC,EAAoCW,IAAI,CAACC,EAAL,GAAQ,CAA5C;AACAhB,IAAAA,GAAG,CAACiB,SAAJ,CAAcT,UAAd,EAA0BN,WAA1B,EAAuCE,WAAvC,EAAoD,EAApD,EAAwD,EAAxD;AACAJ,IAAAA,GAAG,CAACkB,SAAJ;AACAlB,IAAAA,GAAG,CAACmB,IAAJ;AAEAnB,IAAAA,GAAG,CAACoB,IAAJ;AACH,GAtBD;;AAwBA/B,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,MAAM;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA,gCAAG;AAAK,UAAA,GAAG,EAAEJ,QAAQ,CAAC6B,SAAnB;AAA8B,UAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAH,mBAAqE7B,QAAQ,CAAC8B,KAA9E,OAAwF9B,QAAQ,CAAC+B,WAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7CD;;GAAMjC,c;;KAAAA,c;AA+CN,eAAeA,cAAf,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useEffect} from 'react';\n\nconst LastPlayDetail = (data) => {\n    const instance = data.props;\n    console.log('last play');\n    console.log(data.props);\n\n\n    const Canvas = () => {\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n        // const xCoordinate = 233;\n        // const yCoordinate = 65;\n        const xCoordinate = instance.locX / 2;\n        const yCoordinate = instance.locY / 2;\n\n        ctx.beginPath();\n\n        ctx.fillStyle = \"blue\";\n        const base_image = Image();\n        base_image.src = '../../media/images/rocketsLogo.png';\n        \n        ctx.translate(canvas.width/2,canvas.height/2);\n\n        ctx.arc(xCoordinate,yCoordinate,5,0,Math.PI*2);\n        ctx.drawImage(base_image, xCoordinate, yCoordinate, 10, 10);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.save();\n    }\n\n    useEffect(()=>{\n        Canvas();\n    }, [])\n\n    return (\n        <div className=\"last-play\">\n            <div className=\"last-play-header\">\n                <p><img src={instance.playerImg} alt=\"player image\" /> Last Play @ { instance.clock } { instance.description }</p>\n            </div>\n            \n            <div className=\"last-play-canvas\">\n                <canvas id=\"canvas\" className=\"canvas\"></canvas>\n            </div>\n        </div>\n    )\n}\n\nexport default LastPlayDetail;\n\n\n// Component goal, render 'last play' data out onto court based on coordinate provided\n// Future goal, render all game event coordinates once a game has completed. \n// Future goal, render all game events with hover over effect with popup of description\n\n// This component is not working correctly. I am struggling to understand how these coordinates\n// pertain to the coordinates of a court. I have shifted [0,0] to center court. However without\n// what the bounds of the coordinates arem I am unsure on how to correctly render them out accurately. \n// I currently have it set to diving all coordinates by two because I have not seen a query with a \n// coordinate beyond an integer of 200, but have seen them in the high 100s. I did some rendering with \n// coordinates that were based on the court size however There were a number of coordinates that were \n// returned that did not match the message that was returned with it so I gave up. I'd love to talk to \n// you about how your coordinates work so that I can make this component work correctly regardless of \n// whether or not hired. "]},"metadata":{},"sourceType":"module"}