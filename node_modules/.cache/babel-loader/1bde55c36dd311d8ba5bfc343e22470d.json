{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react'; // Reducers\n\nimport GetScoreData from './reducers/ScoreAPI'; // import GetLastPlayData from './reducers/LastPlayAPI';\n// Components\n\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport WindowScoreBoard from './components/mainCards/windowScoreBoard.jsx'; // import LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\n// import TeamStats from './components/tabs/teamStats.jsx';\n// import Tickets from './components/resources/tickets.jsx';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [scoreDetail, setScoreDetail] = useState([]); // const [ teamData, setTeamData ] = useState([]);\n  // const [ lastPlayData, setLastPlayData ] = useState([]);\n\n  const [showTeamData, setShowTeamData] = useState(false);\n  const [showLastPlay, setShowLastPlay] = useState(true);\n  const [showTickets, setShowTickets] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const homeTeam = () => {\n    setShowLastPlay(false); // setShowTeamData(true);\n    // setTeamData(data.hls.pstsg);\n\n    setShowTickets(false);\n  };\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true); // setTeamData(data.vls.pstsg);\n\n    setShowTickets(false);\n  };\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n    setShowTickets(false);\n  };\n\n  const tickets = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(true);\n  };\n\n  const fullScreen = () => {\n    setIsFullScreen(true);\n  };\n\n  const hideFullScreen = () => {\n    setIsFullScreen(false);\n  };\n\n  const vlsImg = 'https://i.cdn.turner.com/nba/nba/assets/logos/teams/primary/web/' + data.vls.ta + '.svg';\n  const hlsImg = 'https://i.cdn.turner.com/nba/nba/assets/logos/teams/primary/web/' + data.hls.ta + '.svg';\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(res => {\n      setData(res.g);\n      console.log(data);\n      setScoreDetail(GetScoreData(data)); // setLastPlayData(GetLastPlayData(data));\n\n      setLoaded(true);\n      console.log('data loaded');\n    }, // Note: handling errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n      console.log(error);\n      setLoaded(true);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  } else if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-page\",\n      children: /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  } else if (isFullScreen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"window\",\n        children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {\n          props: scoreDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window-logos\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: vlsImg,\n            alt: data.vls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hlsImg,\n            alt: data.hls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: /*#__PURE__*/_jsxDEV(WindowScoreBoard, {\n            props: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"window-lp-data\",\n          children: [\"Last Play: \", data.lpla.cl, \" \", data.lpla.de]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fullScreen,\n          children: \"FullScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"FBXQMqfx2If+5FG0MJBR4T1pobU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js"],"names":["React","useState","useEffect","GetScoreData","LoadingScreen","Header","ScoreBoard","WindowScoreBoard","App","error","setError","data","setData","loaded","setLoaded","scoreDetail","setScoreDetail","showTeamData","setShowTeamData","showLastPlay","setShowLastPlay","showTickets","setShowTickets","isFullScreen","setIsFullScreen","homeTeam","awayTeam","lastPlay","tickets","fullScreen","hideFullScreen","vlsImg","vls","ta","hlsImg","hls","fetch","then","res","json","g","console","log","message","lpla","cl","de"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\n\n// Reducers\nimport GetScoreData from './reducers/ScoreAPI';\n// import GetLastPlayData from './reducers/LastPlayAPI';\n\n// Components\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport WindowScoreBoard from './components/mainCards/windowScoreBoard.jsx';\n// import LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\n// import TeamStats from './components/tabs/teamStats.jsx';\n// import Tickets from './components/resources/tickets.jsx';\n\nfunction App() {\n  const [ error, setError ] = useState(null);\n  const [ data, setData ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  const [ scoreDetail, setScoreDetail ] = useState([]);\n\n  // const [ teamData, setTeamData ] = useState([]);\n  // const [ lastPlayData, setLastPlayData ] = useState([]);\n\n  const [ showTeamData, setShowTeamData ] = useState(false);\n  const [ showLastPlay, setShowLastPlay ] = useState(true);\n  const [ showTickets, setShowTickets ] = useState(false);\n\n  const [ isFullScreen, setIsFullScreen ] = useState(false);\n\n  const homeTeam = () => {\n    setShowLastPlay(false);\n    // setShowTeamData(true);\n    // setTeamData(data.hls.pstsg);\n    setShowTickets(false);\n  }\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    // setTeamData(data.vls.pstsg);\n    setShowTickets(false);\n  }\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n    setShowTickets(false);\n  }\n\n  const tickets = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(true);\n  }\n\n  const fullScreen = () => {\n    setIsFullScreen(true);\n  }\n\n  const hideFullScreen = () => {\n    setIsFullScreen(false);\n  }\n\n  const vlsImg = 'https://i.cdn.turner.com/nba/nba/assets/logos/teams/primary/web/' + data.vls.ta + '.svg';\n  const hlsImg = 'https://i.cdn.turner.com/nba/nba/assets/logos/teams/primary/web/' + data.hls.ta + '.svg';\n\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( (res) => {\n        setData(res.g); \n        console.log(data);\n        setScoreDetail(GetScoreData(data));\n        // setLastPlayData(GetLastPlayData(data));\n        setLoaded(true);\n        console.log('data loaded');\n\n      },\n      // Note: handling errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => { \n        setError(error);\n        console.log(error);\n        setLoaded(true);\n      }\n    );\n  }, []);\n\n  if (error) {\n    return <div className=\"App\">Error: {error.message}</div>\n  } else if (!loaded) {\n    return <div className=\"loading-page\">\n        <LoadingScreen />\n      </div>\n  } else if (isFullScreen === true) {\n    return (\n      <div className=\"App\">\n        {/* Banner Section */}\n        {/* <section className=\"header\">\n          <Header props={data} />\n          <ScoreBoard props={scoreDetail} />\n        </section>\n        <section className=\"tab\"> */}\n          {/* <Tabs /> */}\n          {/* <div className=\"tab-bar\">\n            <button onClick={homeTeam}>{data.hls.ta}</button>\n            <button onClick={awayTeam}>{data.vls.ta}</button>\n            <button onClick={lastPlay}>Last Play</button>\n            <button onClick={tickets}>Tickets</button>\n            <button onClick={hideFullScreen}>Minimize</button>\n          </div>\n          { showTeamData === true && (\n            <div className=\"tab-content\">\n              <TeamStats props={teamData} />\n            </div>\n          )};\n          { showLastPlay === true && (\n            <LastPlayDetail props={lastPlayData}/>\n          )}\n          { showTickets === true && (\n            <Tickets />\n          )}\n        </section> */}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <section className=\"window\">\n          <ScoreBoard props={scoreDetail} />\n          <div className=\"window-logos\">\n            <img src={vlsImg} alt={data.vls.ta} />\n            <h1>@</h1>\n            <img src={hlsImg} alt={data.hls.ta} />\n          </div>\n          <div className=\"tab-content\">\n            <WindowScoreBoard props={data} />\n          </div>\n          <p className=\"window-lp-data\">Last Play: {data.lpla.cl} {data.lpla.de}</p>\n          <br></br>\n          <button onClick={fullScreen}>FullScreen</button>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}