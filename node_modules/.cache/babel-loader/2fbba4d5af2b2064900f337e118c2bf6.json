{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/boxScoreGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactSvgPieChart from \"react-svg-piechart\";\nimport LoadingScreen from '../resources/loadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxScoreGraph = state => {\n  _s();\n\n  const instance = state.props;\n  const [loaded, setLoaded] = useState(false);\n  const [dataSet, setaDataSet] = useState([]);\n  const [fgpHls, setFgpHls] = useState(null);\n  const [fgpVls, setFgpVls] = useState(null);\n  const [tppHls, setTppHls] = useState(null);\n  const [tppVls, setTppVls] = useState(null);\n  const [ftpHls, setFtpHls] = useState(null);\n  const [ftpVls, setFtpVls] = useState(null);\n  const [orebHls, setOrebHls] = useState(null);\n  const [orebVls, setOrebVls] = useState(null);\n  const [drebHls, setDrebHls] = useState(null);\n  const [drebVls, setDrebVls] = useState(null); // FIELD GOALS\n\n  const fgpV = Math.round(instance.vls.tstsg.fgm / instance.vls.tstsg.fga * 100);\n  const fgpH = Math.round(instance.hls.tstsg.fgm / instance.hls.tstsg.fga * 100); // THREE POINTERS\n\n  const tppH = Math.round(instance.hls.tstsg.tpm / instance.hls.tstsg.tpa * 100);\n  const tppV = Math.round(instance.vls.tstsg.tpm / instance.hls.tstsg.tpa * 100); // FREE THROWS\n\n  const ftpH = Math.round(instance.hls.tstsg.ftm / instance.hls.tstsg.fta * 100);\n  const ftpV = Math.round(instance.vls.tstsg.ftm / instance.vls.tstsg.fta * 100); // OFFENSIVE REBOUNDS \n\n  const oRebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n  const orebH = Math.round(instance.hls.tstsg.oreb / oRebOne * 100);\n  const oRebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n  const orebV = Math.round(instance.vls.tstsg.oreb / oRebTwo * 100); // DEFENSIVE REBOUNDS \n\n  const drebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n  const drebH = Math.round(instance.hls.tstsg.oreb / drebOne * 100);\n  const drebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n  const drebV = Math.round(instance.vls.tstsg.oreb / drebTwo * 100); // TURNOVERS \n\n  const allTurnovers = instance.hls.tstsg.to + instance.hls.tstsg.to;\n  console.log(allTurnovers); // POINTS OFF TURNOVERS\n\n  const fgpData = [{\n    title: \"Data 1\",\n    value: fgpHls,\n    color: \"#dd2b35\"\n  }, {\n    title: \"Data 2\",\n    value: fgpVls,\n    color: \"#663694\"\n  }];\n  const tppData = [{\n    title: \"Data 1\",\n    value: tppHls,\n    color: \"#dd2b35\"\n  }, {\n    title: \"Data 2\",\n    value: tppVls,\n    color: \"#663694\"\n  }];\n  const ftpData = [{\n    title: \"Data 1\",\n    value: ftpHls,\n    color: \"#dd2b35\"\n  }, {\n    title: \"Data 2\",\n    value: ftpVls,\n    color: \"#663694\"\n  }];\n  const orebData = [{\n    title: \"Data 1\",\n    value: orebHls,\n    color: \"#dd2b35\"\n  }, {\n    title: \"Data 2\",\n    value: orebVls,\n    color: \"#663694\"\n  }];\n  const drebData = [{\n    title: \"Data 1\",\n    value: drebHls,\n    color: \"#dd2b35\"\n  }, {\n    title: \"Data 2\",\n    value: drebVls,\n    color: \"#663694\"\n  }];\n  useEffect(() => {\n    setFgpHls(fgpH);\n    setFgpVls(fgpV);\n    setTppHls(tppH);\n    setTppVls(tppV);\n    setFtpHls(ftpH);\n    setFtpVls(ftpV);\n    setOrebHls(orebH);\n    setOrebVls(orebV);\n    setDrebHls(drebH);\n    setDrebVls(drebV);\n    setLoaded(true);\n  }, []);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Feild Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactSvgPieChart, {\n          data: fgpData // If you need expand on hover (or touch) effect\n          ,\n          expandOnHover: true // If you need custom behavior when sector is hovered (or touched)\n          ,\n          onSectorHover: (d, i, e) => {// if (d) {\n            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n            // } else {\n            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n            // }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Three Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactSvgPieChart, {\n          data: tppData // If you need expand on hover (or touch) effect\n          ,\n          expandOnHover: true // If you need custom behavior when sector is hovered (or touched)\n          ,\n          onSectorHover: (d, i, e) => {// if (d) {\n            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n            // } else {\n            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n            // }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Free Throw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactSvgPieChart, {\n          data: ftpData // If you need expand on hover (or touch) effect\n          ,\n          expandOnHover: true // If you need custom behavior when sector is hovered (or touched)\n          ,\n          onSectorHover: (d, i, e) => {// if (d) {\n            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n            // } else {\n            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n            // }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Off-Rebound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactSvgPieChart, {\n          data: orebData // If you need expand on hover (or touch) effect\n          ,\n          expandOnHover: true // If you need custom behavior when sector is hovered (or touched)\n          ,\n          onSectorHover: (d, i, e) => {\n            if (d) {\n              console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e);\n            } else {\n              console.log(\"Mouse leave - Index:\", i, \"Event:\", e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Def-Rebound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactSvgPieChart, {\n          data: drebData // If you need expand on hover (or touch) effect\n          ,\n          expandOnHover: true // If you need custom behavior when sector is hovered (or touched)\n          ,\n          onSectorHover: (d, i, e) => {\n            if (d) {\n              console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e);\n            } else {\n              console.log(\"Mouse leave - Index:\", i, \"Event:\", e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(BoxScoreGraph, \"9o4bafR0ZID/SeVW20SxxDvhpB8=\");\n\n_c = BoxScoreGraph;\nexport default BoxScoreGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxScoreGraph\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/boxScoreGraph.jsx"],"names":["React","useEffect","useState","ReactSvgPieChart","LoadingScreen","BoxScoreGraph","state","instance","props","loaded","setLoaded","dataSet","setaDataSet","fgpHls","setFgpHls","fgpVls","setFgpVls","tppHls","setTppHls","tppVls","setTppVls","ftpHls","setFtpHls","ftpVls","setFtpVls","orebHls","setOrebHls","orebVls","setOrebVls","drebHls","setDrebHls","drebVls","setDrebVls","fgpV","Math","round","vls","tstsg","fgm","fga","fgpH","hls","tppH","tpm","tpa","tppV","ftpH","ftm","fta","ftpV","oRebOne","oreb","dreb","orebH","oRebTwo","orebV","drebOne","drebH","drebTwo","drebV","allTurnovers","to","console","log","fgpData","title","value","color","tppData","ftpData","orebData","drebData","d","i","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAvB;AACA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAAES,OAAF,EAAWC,WAAX,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AAEA,QAAM,CAAEW,MAAF,EAAUC,SAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEa,MAAF,EAAUC,SAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEe,MAAF,EAAUC,SAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEiB,MAAF,EAAUC,SAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEmB,MAAF,EAAUC,SAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEqB,MAAF,EAAUC,SAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAEuB,OAAF,EAAWC,UAAX,IAA0BxB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAEyB,OAAF,EAAWC,UAAX,IAA0B1B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAE2B,OAAF,EAAWC,UAAX,IAA0B5B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAE6B,OAAF,EAAWC,UAAX,IAA0B9B,QAAQ,CAAC,IAAD,CAAxC,CAf6B,CAiB7B;;AACA,QAAM+B,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBC,GAAnB,GAAyB/B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBE,GAA7C,GAAoD,GAA/D,CAAb;AACA,QAAMC,IAAI,GAAGN,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBC,GAAnB,GAAyB/B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBE,GAA7C,GAAoD,GAA/D,CAAb,CAnB6B,CAqB7B;;AACA,QAAMG,IAAI,GAAGR,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBM,GAAnB,GAAyBpC,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBO,GAA7C,GAAoD,GAA/D,CAAb;AACA,QAAMC,IAAI,GAAGX,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBM,GAAnB,GAAyBpC,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBO,GAA7C,GAAoD,GAA/D,CAAb,CAvB6B,CAyB7B;;AACA,QAAME,IAAI,GAAGZ,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBU,GAAnB,GAAyBxC,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBW,GAA7C,GAAoD,GAA/D,CAAb;AACA,QAAMC,IAAI,GAAGf,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBU,GAAnB,GAAyBxC,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBW,GAA7C,GAAoD,GAA/D,CAAb,CA3B6B,CA6B7B;;AACA,QAAME,OAAO,GAAG3C,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBc,IAAnB,GAA0B5C,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBe,IAA7D;AACA,QAAMC,KAAK,GAAGnB,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBc,IAAnB,GAA0BD,OAA3B,GAAsC,GAAjD,CAAd;AAEA,QAAMI,OAAO,GAAG/C,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBc,IAAnB,GAA0B5C,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBe,IAA7D;AACA,QAAMG,KAAK,GAAGrB,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBc,IAAnB,GAA0BG,OAA3B,GAAsC,GAAjD,CAAd,CAlC6B,CAoC7B;;AACA,QAAME,OAAO,GAAGjD,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBc,IAAnB,GAA0B5C,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBe,IAA7D;AACA,QAAMK,KAAK,GAAGvB,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBc,IAAnB,GAA0BK,OAA3B,GAAsC,GAAjD,CAAd;AAEA,QAAME,OAAO,GAAGnD,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBc,IAAnB,GAA0B5C,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBe,IAA7D;AACA,QAAMO,KAAK,GAAGzB,IAAI,CAACC,KAAL,CAAY5B,QAAQ,CAAC6B,GAAT,CAAaC,KAAb,CAAmBc,IAAnB,GAA0BO,OAA3B,GAAsC,GAAjD,CAAd,CAzC6B,CA2C7B;;AACA,QAAME,YAAY,GAAGrD,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBwB,EAAnB,GAAwBtD,QAAQ,CAACkC,GAAT,CAAaJ,KAAb,CAAmBwB,EAAhE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EA7C6B,CA+C7B;;AAGA,QAAMI,OAAO,GAAG,CACZ;AAACC,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAErD,MAAzB;AAAiCsD,IAAAA,KAAK,EAAE;AAAxC,GADY,EAEZ;AAACF,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEnD,MAAzB;AAAiCoD,IAAAA,KAAK,EAAE;AAAxC,GAFY,CAAhB;AAKA,QAAMC,OAAO,GAAG,CACZ;AAACH,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEjD,MAAzB;AAAiCkD,IAAAA,KAAK,EAAE;AAAxC,GADY,EAEZ;AAACF,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE/C,MAAzB;AAAiCgD,IAAAA,KAAK,EAAE;AAAxC,GAFY,CAAhB;AAKA,QAAME,OAAO,GAAG,CACZ;AAACJ,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE7C,MAAzB;AAAiC8C,IAAAA,KAAK,EAAE;AAAxC,GADY,EAEZ;AAACF,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE3C,MAAzB;AAAiC4C,IAAAA,KAAK,EAAE;AAAxC,GAFY,CAAhB;AAKA,QAAMG,QAAQ,GAAG,CACb;AAACL,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEzC,OAAzB;AAAkC0C,IAAAA,KAAK,EAAE;AAAzC,GADa,EAEb;AAACF,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEvC,OAAzB;AAAkCwC,IAAAA,KAAK,EAAE;AAAzC,GAFa,CAAjB;AAKA,QAAMI,QAAQ,GAAG,CACb;AAACN,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAErC,OAAzB;AAAkCsC,IAAAA,KAAK,EAAE;AAAzC,GADa,EAEb;AAACF,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAEnC,OAAzB;AAAkCoC,IAAAA,KAAK,EAAE;AAAzC,GAFa,CAAjB;AAKAlE,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,SAAS,CAAC0B,IAAD,CAAT;AACAxB,IAAAA,SAAS,CAACiB,IAAD,CAAT;AACAf,IAAAA,SAAS,CAACwB,IAAD,CAAT;AACAtB,IAAAA,SAAS,CAACyB,IAAD,CAAT;AACAvB,IAAAA,SAAS,CAACwB,IAAD,CAAT;AACAtB,IAAAA,SAAS,CAACyB,IAAD,CAAT;AACAvB,IAAAA,UAAU,CAAC2B,KAAD,CAAV;AACAzB,IAAAA,UAAU,CAAC2B,KAAD,CAAV;AACAzB,IAAAA,UAAU,CAAC2B,KAAD,CAAV;AACAzB,IAAAA,UAAU,CAAC2B,KAAD,CAAV;AAEAjD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAKD,MAAL,EAAc;AACV,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AACI,UAAA,IAAI,EAAEuD,OADV,CAEI;AAFJ;AAGI,UAAA,aAAa,MAHjB,CAII;AAJJ;AAKI,UAAA,aAAa,EAAE,CAACQ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa,CACxB;AACA;AACA;AACA;AACA;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AACI,UAAA,IAAI,EAAEN,OADV,CAEI;AAFJ;AAGI,UAAA,aAAa,MAHjB,CAII;AAJJ;AAKI,UAAA,aAAa,EAAE,CAACI,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa,CACxB;AACA;AACA;AACA;AACA;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmCI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AACI,UAAA,IAAI,EAAEL,OADV,CAEI;AAFJ;AAGI,UAAA,aAAa,MAHjB,CAII;AAJJ;AAKI,UAAA,aAAa,EAAE,CAACG,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa,CACxB;AACA;AACA;AACA;AACA;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAqDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AACI,UAAA,IAAI,EAAEJ,QADV,CAEI;AAFJ;AAGI,UAAA,aAAa,MAHjB,CAII;AAJJ;AAKI,UAAA,aAAa,EAAE,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACxB,gBAAIF,CAAJ,EAAO;AACHV,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,CAApC,EAAuC,OAAvC,EAAgDD,CAAhD,EAAmD,QAAnD,EAA6DE,CAA7D;AACH,aAFD,MAEO;AACHZ,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,CAApC,EAAuC,QAAvC,EAAiDC,CAAjD;AACH;AACJ;AAXL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArDJ,eAsEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AACI,UAAA,IAAI,EAAEH,QADV,CAEI;AAFJ;AAGI,UAAA,aAAa,MAHjB,CAII;AAJJ;AAKI,UAAA,aAAa,EAAE,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACxB,gBAAIF,CAAJ,EAAO;AACHV,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,CAApC,EAAuC,OAAvC,EAAgDD,CAAhD,EAAmD,QAAnD,EAA6DE,CAA7D;AACH,aAFD,MAEO;AACHZ,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,CAApC,EAAuC,QAAvC,EAAiDC,CAAjD;AACH;AACJ;AAXL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyFH,GA1FD,MA0FO;AACH,wBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AAIJ,CA5LD;;GAAMrE,a;;KAAAA,a;AA8LN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactSvgPieChart from \"react-svg-piechart\"\nimport LoadingScreen from '../resources/loadingScreen';\n\nconst BoxScoreGraph = (state) => {\n    const instance = state.props;\n    const [ loaded, setLoaded ] = useState(false);\n\n    const [ dataSet, setaDataSet ] = useState([]);\n\n    const [ fgpHls, setFgpHls ] = useState(null);\n    const [ fgpVls, setFgpVls ] = useState(null);\n    const [ tppHls, setTppHls ] = useState(null);\n    const [ tppVls, setTppVls ] = useState(null);\n    const [ ftpHls, setFtpHls ] = useState(null);\n    const [ ftpVls, setFtpVls ] = useState(null);\n    const [ orebHls, setOrebHls ] = useState(null);\n    const [ orebVls, setOrebVls ] = useState(null);\n    const [ drebHls, setDrebHls ] = useState(null);\n    const [ drebVls, setDrebVls ] = useState(null);\n\n    // FIELD GOALS\n    const fgpV = Math.round((instance.vls.tstsg.fgm / instance.vls.tstsg.fga) * 100);\n    const fgpH = Math.round((instance.hls.tstsg.fgm / instance.hls.tstsg.fga) * 100);\n\n    // THREE POINTERS\n    const tppH = Math.round((instance.hls.tstsg.tpm / instance.hls.tstsg.tpa) * 100);\n    const tppV = Math.round((instance.vls.tstsg.tpm / instance.hls.tstsg.tpa) * 100);\n    \n    // FREE THROWS\n    const ftpH = Math.round((instance.hls.tstsg.ftm / instance.hls.tstsg.fta) * 100);\n    const ftpV = Math.round((instance.vls.tstsg.ftm / instance.vls.tstsg.fta) * 100);\n\n    // OFFENSIVE REBOUNDS \n    const oRebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n    const orebH = Math.round((instance.hls.tstsg.oreb / oRebOne) * 100);\n\n    const oRebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n    const orebV = Math.round((instance.vls.tstsg.oreb / oRebTwo) * 100);\n\n    // DEFENSIVE REBOUNDS \n    const drebOne = instance.hls.tstsg.oreb + instance.vls.tstsg.dreb;\n    const drebH = Math.round((instance.hls.tstsg.oreb / drebOne) * 100);\n\n    const drebTwo = instance.vls.tstsg.oreb + instance.hls.tstsg.dreb;\n    const drebV = Math.round((instance.vls.tstsg.oreb / drebTwo) * 100);\n\n    // TURNOVERS \n    const allTurnovers = instance.hls.tstsg.to + instance.hls.tstsg.to;\n    console.log(allTurnovers);\n\n    // POINTS OFF TURNOVERS\n\n\n    const fgpData = [\n        {title: \"Data 1\", value: fgpHls, color: \"#dd2b35\"},\n        {title: \"Data 2\", value: fgpVls, color: \"#663694\"},\n    ]\n\n    const tppData = [\n        {title: \"Data 1\", value: tppHls, color: \"#dd2b35\"},\n        {title: \"Data 2\", value: tppVls, color: \"#663694\"},\n    ]\n\n    const ftpData = [\n        {title: \"Data 1\", value: ftpHls, color: \"#dd2b35\"},\n        {title: \"Data 2\", value: ftpVls, color: \"#663694\"},\n    ]\n\n    const orebData = [\n        {title: \"Data 1\", value: orebHls, color: \"#dd2b35\"},\n        {title: \"Data 2\", value: orebVls, color: \"#663694\"},\n    ]\n\n    const drebData = [\n        {title: \"Data 1\", value: drebHls, color: \"#dd2b35\"},\n        {title: \"Data 2\", value: drebVls, color: \"#663694\"},\n    ]\n\n    useEffect(()=>{\n        setFgpHls(fgpH);\n        setFgpVls(fgpV);\n        setTppHls(tppH);\n        setTppVls(tppV);\n        setFtpHls(ftpH);\n        setFtpVls(ftpV);\n        setOrebHls(orebH);\n        setOrebVls(orebV);\n        setDrebHls(drebH);\n        setDrebVls(drebV);\n\n        setLoaded(true);\n    }, []);\n\n    if ( loaded ) {\n        return (\n            <div className=\"graph\">\n                <div className=\"graph-card\">\n                    <h1>Feild Goal</h1>\n                    <ReactSvgPieChart\n                        data={fgpData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Three Point</h1>\n                    <ReactSvgPieChart\n                        data={tppData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Free Throw</h1>\n                    <ReactSvgPieChart\n                        data={ftpData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            // if (d) {\n                            //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            // } else {\n                            //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            // }\n                        }}\n                    />\n                </div>\n                \n\n                <div className=\"graph-card\">\n                    <h1>Off-Rebound</h1>\n                    <ReactSvgPieChart\n                        data={orebData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            if (d) {\n                                console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            } else {\n                                console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            }\n                        }}\n                    />\n                </div>\n\n                <div className=\"graph-card\">\n                    <h1>Def-Rebound</h1>\n                    <ReactSvgPieChart\n                        data={drebData}\n                        // If you need expand on hover (or touch) effect\n                        expandOnHover\n                        // If you need custom behavior when sector is hovered (or touched)\n                        onSectorHover={(d, i, e) => {\n                            if (d) {\n                                console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\n                            } else {\n                                console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <LoadingScreen />\n        )\n    }\n    \n\n\n}\n\nexport default BoxScoreGraph;"]},"metadata":{},"sourceType":"module"}