{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react'; // Reducers\n\nimport GetGameData from './reducers/GameDataAPI';\nimport GetScoreData from './reducers/ScoreAPI';\nimport GetLastPlayData from './reducers/LastPlayAPI'; // Components\n\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\nimport TeamStats from './components/tabs/teamStats.jsx';\nimport Tickets from './components/resources/tickets.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [gameDetail, setGameDetail] = useState([]);\n  const [scoreDetail, setScoreDetail] = useState([]);\n  const [teamData, setTeamData] = useState([]);\n  const [lastPlayData, setLastPlayData] = useState([]);\n  const [showTeamData, setShowTeamData] = useState(false);\n  const [showLastPlay, setShowLastPlay] = useState(false);\n  const [showTickets, setShowTickets] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const homeTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.hls.pstsg);\n    setShowTickets(false);\n  };\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.vls.pstsg);\n    setShowTickets(false);\n  };\n\n  const ghostBox = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(false);\n  };\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n    setShowTickets(false);\n  };\n\n  const tickets = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(true);\n  };\n\n  const fullScreen = () => {\n    setIsFullScreen(true);\n  };\n\n  const hideFullScreen = () => {\n    setIsFullScreen(false);\n  };\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(res => {\n      setData(res.g);\n      setGameDetail(GetGameData(data));\n      setScoreDetail(GetScoreData(data));\n      setTeamData(data.hls.pstsg);\n      setLastPlayData(GetLastPlayData(data));\n      setLoaded(true);\n      console.log('data loaded');\n      console.log(loaded);\n    }, // Note: handling errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n      console.log(error);\n      setLoaded(true);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  } else if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-page\",\n      children: /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  } else if (isFullScreen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          props: gameDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n          props: scoreDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: homeTeam,\n            children: data.hls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: awayTeam,\n            children: data.vls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: lastPlay,\n            children: \"Last Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: tickets,\n            children: \"Tickets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ghostBox,\n            children: \"Hide Stats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), showTeamData === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: /*#__PURE__*/_jsxDEV(TeamStats, {\n            props: teamData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), \";\", showLastPlay === true && /*#__PURE__*/_jsxDEV(LastPlayDetail, {\n          props: lastPlayData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), showTickets === true && /*#__PURE__*/_jsxDEV(Tickets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Hello, world\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(App, \"5wgaQOZx+/pFvdrkASTRlXA3P/s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js"],"names":["React","useState","useEffect","GetGameData","GetScoreData","GetLastPlayData","LoadingScreen","Header","ScoreBoard","LastPlayDetail","TeamStats","Tickets","App","error","setError","data","setData","loaded","setLoaded","gameDetail","setGameDetail","scoreDetail","setScoreDetail","teamData","setTeamData","lastPlayData","setLastPlayData","showTeamData","setShowTeamData","showLastPlay","setShowLastPlay","showTickets","setShowTickets","isFullScreen","setIsFullScreen","homeTeam","hls","pstsg","awayTeam","vls","ghostBox","lastPlay","tickets","fullScreen","hideFullScreen","fetch","then","res","json","g","console","log","message","ta"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\n\n// Reducers\nimport GetGameData from './reducers/GameDataAPI';\nimport GetScoreData from './reducers/ScoreAPI';\nimport GetLastPlayData from './reducers/LastPlayAPI';\n\n// Components\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\nimport TeamStats from './components/tabs/teamStats.jsx';\nimport Tickets from './components/resources/tickets.jsx';\n\nfunction App() {\n  const [ error, setError ] = useState(null);\n  const [ data, setData ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  const [ gameDetail, setGameDetail ] = useState([]);\n  const [ scoreDetail, setScoreDetail ] = useState([]);\n\n  const [ teamData, setTeamData ] = useState([]);\n  const [ lastPlayData, setLastPlayData ] = useState([]);\n\n  const [ showTeamData, setShowTeamData ] = useState(false);\n  const [ showLastPlay, setShowLastPlay ] = useState(false);\n  const [ showTickets, setShowTickets ] = useState(false);\n\n  const [ isFullScreen, setIsFullScreen ] = useState(false);\n\n  const homeTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.hls.pstsg);\n    setShowTickets(false);\n  }\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.vls.pstsg);\n    setShowTickets(false);\n  }\n\n  const ghostBox = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(false);\n  }\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n    setShowTickets(false);\n  }\n\n  const tickets = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n    setShowTickets(true);\n  }\n\n  const fullScreen = () => {\n    setIsFullScreen(true);\n  }\n\n  const hideFullScreen = () => {\n    setIsFullScreen(false);\n  }\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( (res) => {\n        setData(res.g); \n        setGameDetail(GetGameData(data));\n        setScoreDetail(GetScoreData(data));\n        setTeamData(data.hls.pstsg);\n        setLastPlayData(GetLastPlayData(data));\n        setLoaded(true);\n        console.log('data loaded');\n        console.log(loaded);\n      },\n      // Note: handling errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => { \n        setError(error);\n        console.log(error);\n        setLoaded(true);\n      }\n    );\n  }, []);\n\n  if (error) {\n    return <div className=\"App\">Error: {error.message}</div>\n  } else if (!loaded) {\n    return <div className=\"loading-page\">\n        <LoadingScreen />\n      </div>\n  } else if (isFullScreen === true) {\n    return (\n      <div className=\"App\">\n        {/* Banner Section */}\n        <section className=\"header\">\n          <Header props={gameDetail} />\n          <ScoreBoard props={scoreDetail} />\n        </section>\n        <section className=\"tab\">\n          {/* <Tabs /> */}\n          <div className=\"tab-bar\">\n            <button onClick={homeTeam}>{data.hls.ta}</button>\n            <button onClick={awayTeam}>{data.vls.ta}</button>\n            <button onClick={lastPlay}>Last Play</button>\n            <button onClick={tickets}>Tickets</button>\n            <button onClick={ghostBox}>Hide Stats</button>\n          </div>\n          { showTeamData === true && (\n            <div className=\"tab-content\">\n              <TeamStats props={teamData} />\n            </div>\n          )};\n          { showLastPlay === true && (\n            <LastPlayDetail props={lastPlayData}/>\n          )}\n          { showTickets === true && (\n            <Tickets />\n          )}\n        </section>\n      </div>\n    );\n  } else {\n    <div className=\"App\">\n      <section>\n        <h4>Hello, world</h4>\n      </section>\n    </div>\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}