{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/lastPlayDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GetPointLeaders from '../../reducers/LeadersAPI';\nimport GetLastPlayData from '../../reducers/LastPlayAPI';\nimport PointLeaders from './pointLeaders.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LastPlayDetail = data => {\n  _s();\n\n  const instance = data.props;\n  console.log(instance);\n  const [lastPlayData, setLastPlayData] = useState(null);\n  const [pointLeaderData, setPointLeaderData] = useState(null);\n\n  const Canvas = () => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext(\"2d\");\n    const xCoordinate = instance.locX / 2;\n    const yCoordinate = instance.locY / 2;\n    ctx.beginPath();\n    ctx.fillStyle = \"black\"; // Set canvas [0,0] to center\n\n    ctx.translate(canvas.width / 2, canvas.height / 2); // Draw \n\n    ctx.arc(xCoordinate, yCoordinate, 5, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.save();\n  };\n\n  useEffect(() => {\n    const lastPlay = GetLastPlayData(instance);\n    console.log(lastPlay);\n    const leaders = GetPointLeaders(instance);\n    setLastPlayData(lastPlay);\n    console.log(lastPlayData);\n    setPointLeaderData(leaders);\n    console.log(pointLeaderData);\n    const canvas = Canvas();\n    return canvas;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"last-play\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LastPlayDetail, \"HzuYEzt5aEaVd5OpfPQYQ2h/e6k=\");\n\n_c = LastPlayDetail;\nexport default LastPlayDetail; // Component goal, render 'last play' data out onto court based on coordinate provided\n// Future goal, render all game event coordinates once a game has completed. \n// Future goal, render all game events with hover over effect with popup of description\n\nvar _c;\n\n$RefreshReg$(_c, \"LastPlayDetail\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/lastPlayDetail.jsx"],"names":["React","useEffect","useState","GetPointLeaders","GetLastPlayData","PointLeaders","LastPlayDetail","data","instance","props","console","log","lastPlayData","setLastPlayData","pointLeaderData","setPointLeaderData","Canvas","canvas","document","getElementById","ctx","getContext","xCoordinate","locX","yCoordinate","locY","beginPath","fillStyle","translate","width","height","arc","Math","PI","closePath","fill","save","lastPlay","leaders"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAAA;;AAC7B,QAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAM,CAAEI,YAAF,EAAgBC,eAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAAEY,eAAF,EAAmBC,kBAAnB,IAA0Cb,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACjB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AAEA,UAAMC,WAAW,GAAGd,QAAQ,CAACe,IAAT,GAAgB,CAApC;AACA,UAAMC,WAAW,GAAGhB,QAAQ,CAACiB,IAAT,GAAgB,CAApC;AAEAL,IAAAA,GAAG,CAACM,SAAJ;AAEAN,IAAAA,GAAG,CAACO,SAAJ,GAAgB,OAAhB,CATiB,CAWjB;;AACAP,IAAAA,GAAG,CAACQ,SAAJ,CAAcX,MAAM,CAACY,KAAP,GAAa,CAA3B,EAA6BZ,MAAM,CAACa,MAAP,GAAc,CAA3C,EAZiB,CAcjB;;AACAV,IAAAA,GAAG,CAACW,GAAJ,CAAQT,WAAR,EAAoBE,WAApB,EAAgC,CAAhC,EAAkC,CAAlC,EAAoCQ,IAAI,CAACC,EAAL,GAAQ,CAA5C;AACAb,IAAAA,GAAG,CAACc,SAAJ;AACAd,IAAAA,GAAG,CAACe,IAAJ;AAEAf,IAAAA,GAAG,CAACgB,IAAJ;AACH,GApBD;;AAsBAnC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMoC,QAAQ,GAAGjC,eAAe,CAACI,QAAD,CAAhC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AACA,UAAMC,OAAO,GAAGnC,eAAe,CAACK,QAAD,CAA/B;AACAK,IAAAA,eAAe,CAACwB,QAAD,CAAf;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAG,IAAAA,kBAAkB,CAACuB,OAAD,CAAlB;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ;AACA,UAAMG,MAAM,GAAGD,MAAM,EAArB;AACA,WAAOC,MAAP;AACH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CArDD;;GAAMX,c;;KAAAA,c;AAuDN,eAAeA,cAAf,C,CAGA;AACA;AACA","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport GetPointLeaders from '../../reducers/LeadersAPI';\nimport GetLastPlayData from '../../reducers/LastPlayAPI';\n\nimport PointLeaders from './pointLeaders.jsx';\n\nconst LastPlayDetail = (data) => {\n    const instance = data.props;\n    console.log(instance);\n\n    const [ lastPlayData, setLastPlayData ] = useState(null);\n    const [ pointLeaderData, setPointLeaderData ] = useState(null);\n\n    const Canvas = () => {\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n\n        const xCoordinate = instance.locX / 2;\n        const yCoordinate = instance.locY / 2;\n\n        ctx.beginPath();\n\n        ctx.fillStyle = \"black\";\n\n        // Set canvas [0,0] to center\n        ctx.translate(canvas.width/2,canvas.height/2);\n\n        // Draw \n        ctx.arc(xCoordinate,yCoordinate,5,0,Math.PI*2);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.save();\n    }\n\n    useEffect(()=>{\n        const lastPlay = GetLastPlayData(instance);\n        console.log(lastPlay);\n        const leaders = GetPointLeaders(instance);\n        setLastPlayData(lastPlay);\n        console.log(lastPlayData);\n        setPointLeaderData(leaders);\n        console.log(pointLeaderData);\n        const canvas = Canvas();\n        return canvas;\n    }, [])\n\n    return (\n        <div className=\"last-play\">\n            {/* <div className=\"last-play-header\">\n                <p><img src={lastPlayData.playerImg} alt=\"player\" /> Last Play @ { lastPlayData.clock } { lastPlayData.description }</p>\n            </div>\n            \n            <div className=\"last-play-canvas\">\n                <canvas id=\"canvas\" className=\"canvas\"></canvas>\n            </div>\n            <LastPlayDetail props={pointLeaderData} /> */}\n        </div>\n    )\n}\n\nexport default LastPlayDetail;\n\n\n// Component goal, render 'last play' data out onto court based on coordinate provided\n// Future goal, render all game event coordinates once a game has completed. \n// Future goal, render all game events with hover over effect with popup of description\n"]},"metadata":{},"sourceType":"module"}