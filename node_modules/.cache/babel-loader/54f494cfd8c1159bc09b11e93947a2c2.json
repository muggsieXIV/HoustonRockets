{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/boxScoreGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport LoadingScreen from '../resources/loadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxScoreGraph = data => {\n  _s();\n\n  const instance = data.props;\n  const [loaded, setLoaded] = useState(false); // const [ dataSet, setaDataSet ] = useState([]);\n  // const [ fgpHls, setFgpHls ] = useState(null);\n  // const [ fgpVls, setFgpVls ] = useState(null);\n  // const [ tppHls, setTppHls ] = useState(null);\n  // const [ tppVls, setTppVls ] = useState(null);\n  // const [ ftpHls, setFtpHls ] = useState(null);\n  // const [ ftpVls, setFtpVls ] = useState(null);\n  // // FIELD GOALS\n  // const fgpV = Math.round((instance.vls.tstsg.fgm / instance.vls.tstsg.fga) * 100) + '%';\n  // const fgpH = Math.round((instance.hls.tstsg.fgm / instance.hls.tstsg.fga) * 100) + '%';\n  // // THREE POINTERS\n  // const tppH = Math.round((instance.hls.tstsg.tpm / instance.hls.tstsg.tpa) * 100) + '%';\n  // const tppV = Math.round((instance.vls.tstsg.tpm / instance.hls.tstsg.tpa) * 100) + '%';\n  // // FREE THROWS\n  // const ftpH = Math.round((instance.hls.tstsg.ftm / instance.hls.tstsg.fta) * 100) + '%';\n  // const ftpV = Math.round((instance.vls.tstsg.ftm / instance.vls.tstsg.fta) * 100) + '%';\n  // OFFENSIVE REBOUNDS \n  // DEFENSIVE REBOUNDS \n  // TURNOVERS \n  // POINTS OFF TURNOVERS\n\n  useEffect(() => {\n    // setFgpHls(fgpH);\n    // setFgpVls(fgpV);\n    // setTppHls(tppH);\n    // setTppVls(tppV);\n    // setFtpHls(ftpH);\n    // setFtpVls(ftpV);\n    setLoaded(true);\n  }, []);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(BoxScoreGraph, \"I9IqietSgVqquLR5RESRul1isBg=\");\n\n_c = BoxScoreGraph;\nexport default BoxScoreGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxScoreGraph\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/components/tabs/boxScoreGraph.jsx"],"names":["React","useEffect","useState","PieChart","LoadingScreen","BoxScoreGraph","data","instance","props","loaded","setLoaded"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAAA;;AAC5B,QAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAtB;AACA,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAF4B,CAI5B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV;AACA;AACA;AACA;AACA;AACA;AAEAS,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GATQ,EASN,EATM,CAAT;;AAWA,MAAKD,MAAL,EAAc;AACV,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,wBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AAIJ,CA1DD;;GAAMJ,a;;KAAAA,a;AA4DN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport LoadingScreen from '../resources/loadingScreen';\n\nconst BoxScoreGraph = (data) => {\n    const instance = data.props;\n    const [ loaded, setLoaded ] = useState(false);\n\n    // const [ dataSet, setaDataSet ] = useState([]);\n\n    // const [ fgpHls, setFgpHls ] = useState(null);\n    // const [ fgpVls, setFgpVls ] = useState(null);\n    // const [ tppHls, setTppHls ] = useState(null);\n    // const [ tppVls, setTppVls ] = useState(null);\n    // const [ ftpHls, setFtpHls ] = useState(null);\n    // const [ ftpVls, setFtpVls ] = useState(null);\n\n    // // FIELD GOALS\n    // const fgpV = Math.round((instance.vls.tstsg.fgm / instance.vls.tstsg.fga) * 100) + '%';\n    // const fgpH = Math.round((instance.hls.tstsg.fgm / instance.hls.tstsg.fga) * 100) + '%';\n    \n    // // THREE POINTERS\n    // const tppH = Math.round((instance.hls.tstsg.tpm / instance.hls.tstsg.tpa) * 100) + '%';\n    // const tppV = Math.round((instance.vls.tstsg.tpm / instance.hls.tstsg.tpa) * 100) + '%';\n    \n    // // FREE THROWS\n    // const ftpH = Math.round((instance.hls.tstsg.ftm / instance.hls.tstsg.fta) * 100) + '%';\n    // const ftpV = Math.round((instance.vls.tstsg.ftm / instance.vls.tstsg.fta) * 100) + '%';\n\n    // OFFENSIVE REBOUNDS \n\n    // DEFENSIVE REBOUNDS \n\n    // TURNOVERS \n\n    // POINTS OFF TURNOVERS\n\n    useEffect(()=>{\n        // setFgpHls(fgpH);\n        // setFgpVls(fgpV);\n        // setTppHls(tppH);\n        // setTppVls(tppV);\n        // setFtpHls(ftpH);\n        // setFtpVls(ftpV);\n\n        setLoaded(true);\n    }, []);\n\n    if ( loaded ) {\n        return (\n            <div className=\"graph\">\n                <h2>Hello</h2>\n            </div>\n        )\n    } else {\n        return (\n            <LoadingScreen />\n        )\n    }\n    \n\n\n}\n\nexport default BoxScoreGraph;"]},"metadata":{},"sourceType":"module"}