{"ast":null,"code":"import React, { useState } from 'react';\nexport default function GetGameData(data) {\n  const instance = data.props;\n  console.log(instance);\n  const opponent = \"\";\n\n  if (instance.vls.ta === 'HOU') {\n    opponent = instance.vls.tn;\n    const dataCached = true;\n  } else {\n    const opponent = instance.hls.tn;\n    const dataCached = true;\n  }\n\n  const GameData = {\n    'date': instance.gdte,\n    'time': instance.utctm,\n    'city': instance.ac,\n    'state': instance.as,\n    // 'opponent': opponent,\n    'status': instance.st\n  };\n  return GameData;\n}\n_c = GetGameData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetGameData\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/reducers/GameDataAPI.js"],"names":["React","useState","GetGameData","data","instance","props","console","log","opponent","vls","ta","tn","dataCached","hls","GameData","gdte","utctm","ac","as","st"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACtC,QAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,QAAQ,GAAG,EAAjB;;AACA,MAAGJ,QAAQ,CAACK,GAAT,CAAaC,EAAb,KAAoB,KAAvB,EAA8B;AAC1BF,IAAAA,QAAQ,GAAGJ,QAAQ,CAACK,GAAT,CAAaE,EAAxB;AACA,UAAMC,UAAU,GAAG,IAAnB;AACH,GAHD,MAII;AACA,UAAMJ,QAAQ,GAAIJ,QAAQ,CAACS,GAAT,CAAaF,EAA/B;AACA,UAAMC,UAAU,GAAG,IAAnB;AACH;;AAED,QAAME,QAAQ,GAAG;AACb,YAAQV,QAAQ,CAACW,IADJ;AAEb,YAAQX,QAAQ,CAACY,KAFJ;AAGb,YAAQZ,QAAQ,CAACa,EAHJ;AAIb,aAASb,QAAQ,CAACc,EAJL;AAKb;AACA,cAAUd,QAAQ,CAACe;AANN,GAAjB;AAQA,SAAOL,QAAP;AAEH;KAvBuBZ,W","sourcesContent":["import React, {useState} from 'react';\n\nexport default function GetGameData(data) {\n    const instance = data.props;\n    console.log(instance);\n    const opponent = \"\";\n    if(instance.vls.ta === 'HOU') {\n        opponent = instance.vls.tn;\n        const dataCached = true;\n    }\n    else{\n        const opponent = (instance.hls.tn);\n        const dataCached = true;\n    }\n\n    const GameData = {\n        'date': instance.gdte,\n        'time': instance.utctm,\n        'city': instance.ac,\n        'state': instance.as,\n        // 'opponent': opponent,\n        'status': instance.st\n    };\n    return GameData;\n\n}\n\n"]},"metadata":{},"sourceType":"module"}