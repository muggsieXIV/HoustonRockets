{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport LoadingScreen from './components/resources/LoadingScreen.jsx'; // import GameDetail from './components/mainCards/GameDetail.jsx'; \n// import GameStats from './components/mainCards/GameStats.jsx';\n// import PlayerStatsGameDetail from './components/mainCards/PlayerStatsGameDetail.jsx';\n// import TeamStatsDetail from './components/mainCards/TeamStatsDetail.jsx';\n\nimport Header from './components/resources/Header.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const GetGameDetail = instance => {\n    _s();\n\n    const [opponent, setOpponent] = useState(\"\");\n\n    if (instance.vls.ta === 'HOU') {\n      setOpponent(instance.vls.ta);\n    } else {\n      setOpponent(instance.hls.ta);\n    }\n\n    const gameData = {\n      'date': instance.gdte,\n      'time': instance.utctm,\n      'city': instance.ac,\n      'state': instance.as,\n      'opponent': opponent,\n      'status': instance.st\n    };\n  };\n\n  _s(GetGameDetail, \"5lAiO8vGLC9sAFv3tBLgLfsAJdg=\");\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(res => {\n      setData(res.g);\n      console.log(data);\n      GetGameDetail(data);\n      setLoaded(true);\n    }, // Note: handling errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n      console.log(error);\n      setLoaded(true);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } else if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-page\",\n      children: /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s2(App, \"+xnI8R/7Z4ZMr0oCUQTMcuXmbnA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js"],"names":["React","useState","useEffect","LoadingScreen","Header","App","error","setError","data","setData","loaded","setLoaded","GetGameDetail","instance","opponent","setOpponent","vls","ta","hls","gameData","gdte","utctm","ac","as","st","fetch","then","res","json","g","console","log","message"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,0CAA1B,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEO,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAES,MAAF,EAAUC,SAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,aAAa,GAAIC,QAAD,IAAc;AAAA;;AAElC,UAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAGY,QAAQ,CAACG,GAAT,CAAaC,EAAb,KAAoB,KAAvB,EAA8B;AAC5BF,MAAAA,WAAW,CAACF,QAAQ,CAACG,GAAT,CAAaC,EAAd,CAAX;AACD,KAFD,MAGI;AACFF,MAAAA,WAAW,CAACF,QAAQ,CAACK,GAAT,CAAaD,EAAd,CAAX;AACD;;AAED,UAAME,QAAQ,GAAG;AACf,cAAQN,QAAQ,CAACO,IADF;AAEf,cAAQP,QAAQ,CAACQ,KAFF;AAGf,cAAQR,QAAQ,CAACS,EAHF;AAIf,eAAST,QAAQ,CAACU,EAJH;AAKf,kBAAYT,QALG;AAMf,gBAAUD,QAAQ,CAACW;AANJ,KAAjB;AAQD,GAnBD;;AALa,KAKPZ,aALO;;AA0BbV,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAECF,IAFD,CAEQC,GAAD,IAAS;AACZlB,MAAAA,OAAO,CAACkB,GAAG,CAACE,CAAL,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACAI,MAAAA,aAAa,CAACJ,IAAD,CAAb;AACAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAPH,EAQE;AACA;AACA;AACCL,IAAAA,KAAD,IAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAZ;AACAK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAfH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAIL,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,4BAA6BA,KAAK,CAAC0B,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACtB,MAAL,EAAa;AAClB,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACH,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD,GAJM,MAIA;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAGE;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;AACF;;IA/EQL,G;;KAAAA,G;AAiFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\nimport LoadingScreen from './components/resources/LoadingScreen.jsx';\n\n// import GameDetail from './components/mainCards/GameDetail.jsx'; \n// import GameStats from './components/mainCards/GameStats.jsx';\n// import PlayerStatsGameDetail from './components/mainCards/PlayerStatsGameDetail.jsx';\n// import TeamStatsDetail from './components/mainCards/TeamStatsDetail.jsx';\nimport Header from './components/resources/Header.jsx';\n\n\nfunction App() {\n  const [ error, setError ] = useState(null);\n  const [ data, setData ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n\n  const GetGameDetail = (instance) => {\n\n    const [ opponent, setOpponent ] = useState(\"\");\n\n    if(instance.vls.ta === 'HOU') {\n      setOpponent(instance.vls.ta);\n    }\n    else{\n      setOpponent(instance.hls.ta);\n    }\n\n    const gameData = {\n      'date': instance.gdte,\n      'time': instance.utctm,\n      'city': instance.ac,\n      'state': instance.as,\n      'opponent': opponent,\n      'status': instance.st\n    }\n  }\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( (res) => {\n        setData(res.g);\n        console.log(data);\n        GetGameDetail(data);\n        setLoaded(true);\n      },\n      // Note: handling errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => { \n        setError(error);\n        console.log(error);\n        setLoaded(true);\n      }\n    );\n  }, [])\n\n  if (error) {\n    return <div className=\"App\">Error: {error.message}</div>\n  } else if (!loaded) {\n    return <div className=\"loading-page\">\n        <LoadingScreen />\n      </div>\n  } else {\n    return (\n      <div className=\"App\">\n\n        {/* Banner Section */}\n        <section className=\"header\">\n          <Header />\n        </section>\n\n\n        {/* Last Play */}\n        {/* <section className=\"last-play\">\n          <p>Last Play: </p>\n          <p>{data.cl}</p>\n          <p>{data.lpla.de}</p>\n        </section> */}\n\n        {/* <div className=\"table\">\n          <table>\n            <thead>\n            </thead>\n            <tbody></tbody>\n          </table>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}