{"ast":null,"code":"export default function GetLastPlayData(data) {\n  const playerID = data.lpla.pid;\n\n  const getPlayerInfo = pid => {\n    for (var x = 0; x < data.pstsg.length; x++) {\n      if (data.pstsg[x].pid === pid) {\n        const playerInfo = {\n          'playerID': pid,\n          'playerNum': data.pstsg[x].num,\n          'playerfName': data.pstsg[x].fn,\n          'playerlName': data.pstsg[x].ln\n        };\n        return playerInfo;\n      }\n    }\n  };\n\n  const lastPlayData = {\n    'clock': data.lpla.cl,\n    'teamID': data.lpla.tid,\n    'playerID': playerID,\n    'eventType': data.lpla.etype,\n    'event': data.lpla.evt,\n    'messageType': data.messageType,\n    'description': data.lpla.de\n  };\n  return lastPlayData;\n}\n_c = GetLastPlayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLastPlayData\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/reducers/LastPlayAPI.js"],"names":["GetLastPlayData","data","playerID","lpla","pid","getPlayerInfo","x","pstsg","length","playerInfo","num","fn","ln","lastPlayData","cl","tid","etype","evt","messageType","de"],"mappings":"AAAA,eAAe,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAE1C,QAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAA3B;;AAEA,QAAMC,aAAa,GAAID,GAAD,IAAS;AAC3B,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,IAAI,CAACM,KAAL,CAAWC,MAA1B,EAAkCF,CAAC,EAAnC,EAAsC;AAClC,UAAGL,IAAI,CAACM,KAAL,CAAWD,CAAX,EAAcF,GAAd,KAAsBA,GAAzB,EAA8B;AAC1B,cAAMK,UAAU,GAAG;AACf,sBAAYL,GADG;AAEf,uBAAaH,IAAI,CAACM,KAAL,CAAWD,CAAX,EAAcI,GAFZ;AAGf,yBAAeT,IAAI,CAACM,KAAL,CAAWD,CAAX,EAAcK,EAHd;AAIf,yBAAeV,IAAI,CAACM,KAAL,CAAWD,CAAX,EAAcM;AAJd,SAAnB;AAMA,eAAOH,UAAP;AACH;AACJ;AACJ,GAZD;;AAcA,QAAMI,YAAY,GAAG;AACjB,aAASZ,IAAI,CAACE,IAAL,CAAUW,EADF;AAEjB,cAAUb,IAAI,CAACE,IAAL,CAAUY,GAFH;AAGjB,gBAAYb,QAHK;AAIjB,iBAAaD,IAAI,CAACE,IAAL,CAAUa,KAJN;AAKjB,aAASf,IAAI,CAACE,IAAL,CAAUc,GALF;AAMjB,mBAAehB,IAAI,CAACiB,WANH;AAOjB,mBAAejB,IAAI,CAACE,IAAL,CAAUgB;AAPR,GAArB;AAUA,SAAON,YAAP;AACH;KA7BuBb,e","sourcesContent":["export default function GetLastPlayData(data) {\n\n    const playerID = data.lpla.pid;\n\n    const getPlayerInfo = (pid) => {\n        for(var x=0; x<data.pstsg.length; x++){\n            if(data.pstsg[x].pid === pid) {\n                const playerInfo = {\n                    'playerID': pid,\n                    'playerNum': data.pstsg[x].num,\n                    'playerfName': data.pstsg[x].fn,\n                    'playerlName': data.pstsg[x].ln,\n                }\n                return playerInfo;\n            }\n        }\n    }\n\n    const lastPlayData = {\n        'clock': data.lpla.cl,\n        'teamID': data.lpla.tid,\n        'playerID': playerID,\n        'eventType': data.lpla.etype,\n        'event': data.lpla.evt,\n        'messageType': data.messageType,\n        'description': data.lpla.de,\n    };\n\n    return lastPlayData;\n}\n"]},"metadata":{},"sourceType":"module"}