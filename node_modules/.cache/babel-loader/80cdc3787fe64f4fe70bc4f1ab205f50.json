{"ast":null,"code":"export default function GetTabAnalytics(instance) {\n  // instance = tab we are evaluating\n  // TO DO: \n  // Get API Data\n  const data = fetchedData; // get new sum of visits\n\n  const getNewSum = () => {\n    return data.sum += 1;\n  }; // get new logs\n\n\n  const getNewLog = () => {\n    data.logs.append(timeDiff);\n  }; // get new avg time\n\n\n  const getNewAvgTime = () => {\n    const logs = getNewLog();\n    const sum = 0;\n\n    for (var x = 0; x < logs.length; x++) {\n      sum += logs[x];\n    }\n\n    const avg = sum / logs.length;\n    return avg;\n  }; // get new total time visited\n  // post new data to api \n\n}\n_c = GetTabAnalytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetTabAnalytics\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/advancing_project/client/src/analytics/TabAnalytics.js"],"names":["GetTabAnalytics","instance","data","fetchedData","getNewSum","sum","getNewLog","logs","append","timeDiff","getNewAvgTime","x","length","avg"],"mappings":"AACA,eAAe,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AAE9C;AAEA;AACA;AACA,QAAMC,IAAI,GAAGC,WAAb,CAN8C,CAQ9C;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpB,WAAQF,IAAI,CAACG,GAAL,IAAY,CAApB;AACH,GAFD,CAT8C,CAa9C;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpBJ,IAAAA,IAAI,CAACK,IAAL,CAAUC,MAAV,CAAiBC,QAAjB;AACH,GAFD,CAd8C,CAkB9C;;;AACA,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMH,IAAI,GAAGD,SAAS,EAAtB;AACA,UAAMD,GAAG,GAAG,CAAZ;;AACA,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,IAAI,CAACK,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7BN,MAAAA,GAAG,IAAIE,IAAI,CAACI,CAAD,CAAX;AACH;;AAED,UAAME,GAAG,GAAGR,GAAG,GAAGE,IAAI,CAACK,MAAvB;AACA,WAAOC,GAAP;AACH,GATD,CAnB8C,CA6B9C;AAEA;;AAEH;KAjCuBb,e","sourcesContent":["\nexport default function GetTabAnalytics(instance) {\n\n    // instance = tab we are evaluating\n\n    // TO DO: \n    // Get API Data\n    const data = fetchedData;\n\n    // get new sum of visits\n    const getNewSum = () => {\n        return (data.sum += 1);\n    }\n\n    // get new logs\n    const getNewLog = () => {\n        data.logs.append(timeDiff);\n    }\n\n    // get new avg time\n    const getNewAvgTime = () => {\n        const logs = getNewLog();\n        const sum = 0;\n        for(var x=0; x<logs.length; x++) {\n            sum += logs[x];\n        }\n        \n        const avg = sum / logs.length;\n        return avg;\n    }\n    // get new total time visited\n\n    // post new data to api \n\n}\n"]},"metadata":{},"sourceType":"module"}