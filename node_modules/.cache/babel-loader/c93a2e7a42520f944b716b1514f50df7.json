{"ast":null,"code":"var _jsxFileName = \"/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react'; // Reducers\n\nimport GetGameData from './reducers/GameDataAPI';\nimport GetScoreData from './reducers/ScoreAPI'; // Components\n\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\nimport TeamStats from './components/tabs/teamStats.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [gameDetail, setGameDetail] = useState([]);\n  const [scoreDetail, setScoreDetail] = useState([]);\n  const [showTeamData, setShowTeamData] = useState(false);\n  const [teamData, setTeamData] = useState([]);\n  const [showLastPlay, setShowLastPlay] = useState(false);\n\n  const homeTeam = () => {\n    setShowTeamData(true);\n    setTeamData(data.hls.pstsg);\n  };\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.vls.pstsg);\n  };\n\n  const ghostBox = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n  };\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n  };\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(res => {\n      setData(res.g);\n      console.log('data');\n      console.log(data);\n      setGameDetail(GetGameData(data));\n      setScoreDetail(GetScoreData(data));\n      setTeamData(data.hls.pstsg);\n      setLoaded(true);\n    }, // Note: handling errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setError(error);\n      console.log(error);\n      setLoaded(true);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  } else if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-page\",\n      children: /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          props: gameDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n          props: scoreDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: homeTeam,\n            children: data.hls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: awayTeam,\n            children: data.vls.ta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: lastPlay,\n            children: \"Show Last Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ghostBox,\n            children: \"Close Window\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), showTeamData === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-content\",\n          children: /*#__PURE__*/_jsxDEV(TeamStats, {\n            props: teamData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \";\", showLastPlay === true && /*#__PURE__*/_jsxDEV(LastPlayDetail, {\n          props: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"OV9TOZ+G/RYNH1BdZsHhQ8sfsGs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/App.js"],"names":["React","useState","useEffect","GetGameData","GetScoreData","LoadingScreen","Header","ScoreBoard","LastPlayDetail","TeamStats","App","error","setError","data","setData","loaded","setLoaded","gameDetail","setGameDetail","scoreDetail","setScoreDetail","showTeamData","setShowTeamData","teamData","setTeamData","showLastPlay","setShowLastPlay","homeTeam","hls","pstsg","awayTeam","vls","ghostBox","lastPlay","fetch","then","res","json","g","console","log","message","ta"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEc,MAAF,EAAUC,SAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEgB,UAAF,EAAcC,aAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEkB,WAAF,EAAeC,cAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAEoB,YAAF,EAAgBC,eAAhB,IAAoCrB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEsB,QAAF,EAAYC,WAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEwB,YAAF,EAAgBC,eAAhB,IAAoCzB,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAM0B,QAAQ,GAAG,MAAM;AACrBL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAACX,IAAI,CAACe,GAAL,CAASC,KAAV,CAAX;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAACX,IAAI,CAACkB,GAAL,CAASF,KAAV,CAAX;AACD,GAJD;;AAMA,QAAMG,QAAQ,GAAG,MAAM;AACrBV,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAI,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMO,QAAQ,GAAG,MAAM;AACrBX,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAECF,IAFD,CAEQC,GAAD,IAAS;AACZtB,MAAAA,OAAO,CAACsB,GAAG,CAACE,CAAL,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACAK,MAAAA,aAAa,CAACf,WAAW,CAACU,IAAD,CAAZ,CAAb;AACAO,MAAAA,cAAc,CAAChB,YAAY,CAACS,IAAD,CAAb,CAAd;AACAW,MAAAA,WAAW,CAACX,IAAI,CAACe,GAAL,CAASC,KAAV,CAAX;AACAb,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAVH,EAWE;AACA;AACA;AACCL,IAAAA,KAAD,IAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACAK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAlBH;AAoBD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,MAAIL,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,4BAA6BA,KAAK,CAAC8B,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAAC1B,MAAL,EAAa;AAClB,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACH,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD,GAJM,MAIA;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAEE;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAEQ,QAAjB;AAAA,sBAA4Bd,IAAI,CAACe,GAAL,CAASc;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEZ,QAAjB;AAAA,sBAA4BjB,IAAI,CAACkB,GAAL,CAASW;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,OAAO,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQIX,YAAY,KAAK,IAAjB,iBACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATJ,OAaIE,YAAY,KAAK,IAAjB,iBACA,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEZ;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;AACF;;GAzFQH,G;;KAAAA,G;AA2FT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect} from 'react';\n\n// Reducers\nimport GetGameData from './reducers/GameDataAPI';\nimport GetScoreData from './reducers/ScoreAPI';\n\n// Components\nimport LoadingScreen from './components/resources/loadingScreen.jsx';\nimport Header from './components/resources/header.jsx';\nimport ScoreBoard from './components/mainCards/scoreBoard.jsx';\nimport LastPlayDetail from './components/tabs/lastPlayDetail.jsx';\nimport TeamStats from './components/tabs/teamStats.jsx';\n\n\nfunction App() {\n  const [ error, setError ] = useState(null);\n  const [ data, setData ] = useState([]);\n  const [ loaded, setLoaded ] = useState(false);\n  const [ gameDetail, setGameDetail ] = useState([]);\n  const [ scoreDetail, setScoreDetail ] = useState([]);\n\n  const [ showTeamData, setShowTeamData ] = useState(false);\n  const [ teamData, setTeamData ] = useState([]);\n  const [ showLastPlay, setShowLastPlay ] = useState(false);\n\n  const homeTeam = () => {\n    setShowTeamData(true);\n    setTeamData(data.hls.pstsg);\n  }\n\n  const awayTeam = () => {\n    setShowLastPlay(false);\n    setShowTeamData(true);\n    setTeamData(data.vls.pstsg);\n  }\n\n  const ghostBox = () => {\n    setShowTeamData(false);\n    setShowLastPlay(false);\n  }\n\n  const lastPlay = () => {\n    setShowTeamData(false);\n    setShowLastPlay(true);\n  }\n\n  useEffect(() => {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( (res) => {\n        setData(res.g); \n        console.log('data');\n        console.log(data);\n        setGameDetail(GetGameData(data));\n        setScoreDetail(GetScoreData(data));\n        setTeamData(data.hls.pstsg);\n        setLoaded(true);\n      },\n      // Note: handling errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => { \n        setError(error);\n        console.log(error);\n        setLoaded(true);\n      }\n    );\n  }, []);\n\n  if (error) {\n    return <div className=\"App\">Error: {error.message}</div>\n  } else if (!loaded) {\n    return <div className=\"loading-page\">\n        <LoadingScreen />\n      </div>\n  } else {\n    return (\n      <div className=\"App\">\n        {/* Banner Section */}\n        <section className=\"header\">\n          <Header props={gameDetail} />\n          <ScoreBoard props={scoreDetail} />\n        </section>\n        <section className=\"tab\">\n          {/* <Tabs /> */}\n          <div className=\"tab-bar\">\n            <button onClick={homeTeam}>{data.hls.ta}</button>\n            <button onClick={awayTeam}>{data.vls.ta}</button>\n            <button onClick={lastPlay}>Show Last Play</button>\n            <button onClick={ghostBox}>Close Window</button>\n          </div>\n          { showTeamData === true && (\n            <div className=\"tab-content\">\n              <TeamStats props={teamData} />\n            </div>\n          )};\n          { showLastPlay === true && (\n            <LastPlayDetail props={data}/>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}