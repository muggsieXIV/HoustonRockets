{"ast":null,"code":"import React, { useState } from 'react';\nconst [data, setData] = useState([]);\nconst [error, setError] = useState(null);\n\nfunction GetData() {\n  fetch(\"https://htxrockets.com/api/archived-game/0022101142\").then(res => res.json()).then(res => {\n    setData(res.g);\n    console.log(data);\n    setLoaded(true);\n  }, // Note: handling errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  error => {\n    setError(error);\n    console.log(error);\n    setLoaded(true);\n  });\n}\n\n_c = GetData;\nexport default function GetGameData(data) {\n  console.log('Game Data...');\n  console.log(data);\n  const instance = data;\n  console.log(instance);\n  const opponent = \"\";\n\n  if (instance.vls.ta === 'HOU') {\n    opponent = instance.vls.tn;\n    const dataCached = true;\n  } else {\n    const opponent = instance.hls.tn;\n    const dataCached = true;\n  }\n\n  const GameData = {\n    'date': instance.gdte,\n    'time': instance.utctm,\n    'city': instance.ac,\n    'state': instance.as,\n    // 'opponent': opponent,\n    'status': instance.st\n  };\n  return GameData;\n}\n_c2 = GetGameData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetData\");\n$RefreshReg$(_c2, \"GetGameData\");","map":{"version":3,"sources":["/Users/benniewalker/Desktop/2022_development/HoustonRockets/client/src/reducers/API.js"],"names":["React","useState","data","setData","error","setError","GetData","fetch","then","res","json","g","console","log","setLoaded","GetGameData","instance","opponent","vls","ta","tn","dataCached","hls","GameData","gdte","utctm","ac","as","st"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBF,QAAQ,CAAC,EAAD,CAA/B;AACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,SAASK,OAAT,GAAmB;AACfC,EAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAECF,IAFD,CAEQC,GAAD,IAAS;AACZN,IAAAA,OAAO,CAACM,GAAG,CAACE,CAAL,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAY,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAND,EAOA;AACA;AACA;AACCV,EAAAA,KAAD,IAAW;AACPC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAU,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAdD;AAgBH;;KAjBQR,O;AAoBT,eAAe,SAASS,WAAT,CAAqBb,IAArB,EAA2B;AACtCU,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,QAAMc,QAAQ,GAAGd,IAAjB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAGD,QAAQ,CAACE,GAAT,CAAaC,EAAb,KAAoB,KAAvB,EAA8B;AAC1BF,IAAAA,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAaE,EAAxB;AACA,UAAMC,UAAU,GAAG,IAAnB;AACH,GAHD,MAII;AACA,UAAMJ,QAAQ,GAAID,QAAQ,CAACM,GAAT,CAAaF,EAA/B;AACA,UAAMC,UAAU,GAAG,IAAnB;AACH;;AAED,QAAME,QAAQ,GAAG;AACb,YAAQP,QAAQ,CAACQ,IADJ;AAEb,YAAQR,QAAQ,CAACS,KAFJ;AAGb,YAAQT,QAAQ,CAACU,EAHJ;AAIb,aAASV,QAAQ,CAACW,EAJL;AAKb;AACA,cAAUX,QAAQ,CAACY;AANN,GAAjB;AAQA,SAAOL,QAAP;AACH;MAxBuBR,W","sourcesContent":["import React, {useState} from 'react';\n\nconst [data,setData] = useState([]);\nconst [error, setError] = useState(null);\n\nfunction GetData() {\n    fetch(\"https://htxrockets.com/api/archived-game/0022101142\")\n    .then( (res) => res.json() )\n    .then( (res) => {\n        setData(res.g);\n        console.log(data);\n        setLoaded(true);\n    },\n    // Note: handling errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    (error) => { \n        setError(error);\n        console.log(error);\n        setLoaded(true);\n    });\n\n}\n\n\nexport default function GetGameData(data) {\n    console.log('Game Data...')\n    console.log(data);\n    const instance = data;\n    console.log(instance);\n    const opponent = \"\";\n    if(instance.vls.ta === 'HOU') {\n        opponent = instance.vls.tn;\n        const dataCached = true;\n    }\n    else{\n        const opponent = (instance.hls.tn);\n        const dataCached = true;\n    }\n\n    const GameData = {\n        'date': instance.gdte,\n        'time': instance.utctm,\n        'city': instance.ac,\n        'state': instance.as,\n        // 'opponent': opponent,\n        'status': instance.st\n    };\n    return GameData;\n}\n\n"]},"metadata":{},"sourceType":"module"}